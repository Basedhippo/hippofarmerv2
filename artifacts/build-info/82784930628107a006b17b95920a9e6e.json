{
	"id": "82784930628107a006b17b95920a9e6e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"HippoSteroids.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract HippoSteroids is Ownable, ReentrancyGuard {\n    // ...\nconstructor(address _devWallet, address _stakingPoolWallet) Ownable(_devWallet) ReentrancyGuard() {\n        devWallet = _devWallet;\n        stakingPoolWallet = _stakingPoolWallet;\n    }\n\n    uint256 public steroidCost = 699420000; // Steroid cost in SUN (699.42 TRX)\n    mapping(address => uint256) public steroidBalance;\n\n    address public devWallet;\n    address public stakingPoolWallet;\n\n    event SteroidPurchased(address indexed buyer, uint256 amount);\n    event SteroidCostUpdated(uint256 newCost);\n\n\n\n    /// @notice Purchases a steroid boost for the Hippo NFT.\n    /// @dev The buyer's steroid balance is incremented and the purchase amount is split between the dev and staking wallets.\n    function buySteroid() external payable nonReentrant {\n        require(msg.value >= steroidCost, \"Insufficient funds for Steroid NFT\");\n\n        steroidBalance[msg.sender]++;\n\n        // Split the payment equally between devWallet and stakingPoolWallet\n        uint256 devShare = msg.value / 2;\n        uint256 stakingShare = msg.value - devShare;\n\n        _payTo(devWallet, devShare);\n        _payTo(stakingPoolWallet, stakingShare);\n\n        emit SteroidPurchased(msg.sender, 1);\n    }\n\n    /// @dev Utility function to transfer funds to a specified address.\n    /// @param to The recipient address.\n    /// @param amount The amount to be transferred.\n    function _payTo(address to, uint256 amount) internal {\n        (bool success, ) = to.call{value: amount}(\"\");\n        require(success, \"Transfer to wallet failed.\");\n    }\n\n    /// @notice Gets the steroid balance of a user.\n    /// @param user The address of the user.\n    /// @return The steroid balance of the specified user.\n    function getSteroidBalance(address user) external view returns (uint256) {\n        return steroidBalance[user];\n    }\n\n    /// @notice Allows the owner to update the cost of a steroid.\n    /// @param newCost The new steroid cost in SUN (1 TRX = 1,000,000 SUN).\n    function setSteroidCost(uint256 newCost) external onlyOwner {\n        require(newCost > 0, \"Steroid cost must be greater than zero\");\n        steroidCost = newCost;\n        emit SteroidCostUpdated(newCost);\n    }\nfunction decreaseSteroidBalance() public {\n    steroidBalance[msg.sender] = steroidBalance[msg.sender] - 1;\n}\n    /// @notice Allows the owner to withdraw any excess funds from the contract.\n    /// @param amount The amount to withdraw.\n    function withdrawFunds(uint256 amount) external onlyOwner {\n        require(amount <= address(this).balance, \"Insufficient contract balance\");\n        _payTo(owner(), amount);\n    }\n\n    /// @notice Gets the contract's current balance in wei.\n    /// @return The balance of the contract.\n    function getContractBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n\n    /// @notice Allows the owner to update the dev wallet address.\n    /// @param newDevWallet The new address for the dev wallet.\n    function setDevWallet(address newDevWallet) external onlyOwner {\n        require(newDevWallet != address(0), \"Invalid address\");\n        devWallet = newDevWallet;\n    }\n\n    /// @notice Allows the owner to update the staking pool wallet address.\n    /// @param newStakingPoolWallet The new address for the staking pool wallet.\n    function setStakingPoolWallet(address newStakingPoolWallet) external onlyOwner {\n        require(newStakingPoolWallet != address(0), \"Invalid address\");\n        stakingPoolWallet = newStakingPoolWallet;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"HippoSteroids.sol": {
				"HippoSteroids": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_devWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingPoolWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newCost",
									"type": "uint256"
								}
							],
							"name": "SteroidCostUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SteroidPurchased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "buySteroid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decreaseSteroidBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getSteroidBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newDevWallet",
									"type": "address"
								}
							],
							"name": "setDevWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newStakingPoolWallet",
									"type": "address"
								}
							],
							"name": "setStakingPoolWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newCost",
									"type": "uint256"
								}
							],
							"name": "setSteroidCost",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingPoolWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "steroidBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "steroidCost",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"buySteroid()": {
								"details": "The buyer's steroid balance is incremented and the purchase amount is split between the dev and staking wallets."
							},
							"getContractBalance()": {
								"returns": {
									"_0": "The balance of the contract."
								}
							},
							"getSteroidBalance(address)": {
								"params": {
									"user": "The address of the user."
								},
								"returns": {
									"_0": "The steroid balance of the specified user."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setDevWallet(address)": {
								"params": {
									"newDevWallet": "The new address for the dev wallet."
								}
							},
							"setStakingPoolWallet(address)": {
								"params": {
									"newStakingPoolWallet": "The new address for the staking pool wallet."
								}
							},
							"setSteroidCost(uint256)": {
								"params": {
									"newCost": "The new steroid cost in SUN (1 TRX = 1,000,000 SUN)."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawFunds(uint256)": {
								"params": {
									"amount": "The amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"HippoSteroids.sol\":175:3725  contract HippoSteroids is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"HippoSteroids.sol\":459:468  699420000 */\n  0x29b04d60\n    /* \"HippoSteroids.sol\":430:468  uint256 public steroidCost = 699420000 */\n  0x02\n  sstore\n    /* \"HippoSteroids.sol\":239:424  constructor(address _devWallet, address _stakingPoolWallet) Ownable(_devWallet) ReentrancyGuard() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"HippoSteroids.sol\":307:317  _devWallet */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"HippoSteroids.sol\":359:369  _devWallet */\n  dup2\n    /* \"HippoSteroids.sol\":347:356  devWallet */\n  0x04\n  0x00\n    /* \"HippoSteroids.sol\":347:369  devWallet = _devWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"HippoSteroids.sol\":399:417  _stakingPoolWallet */\n  dup1\n    /* \"HippoSteroids.sol\":379:396  stakingPoolWallet */\n  0x05\n  0x00\n    /* \"HippoSteroids.sol\":379:417  stakingPoolWallet = _stakingPoolWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"HippoSteroids.sol\":239:424  constructor(address _devWallet, address _stakingPoolWallet) Ownable(_devWallet) ReentrancyGuard() {... */\n  pop\n  pop\n    /* \"HippoSteroids.sol\":175:3725  contract HippoSteroids is Ownable, ReentrancyGuard {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_39\n  tag_18\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":949:1068   */\ntag_38:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_40\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_41\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_23\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_24:\n    /* \"#utility.yul\":1445:1469   */\n  tag_43\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_21\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_10:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_45\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_24\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"HippoSteroids.sol\":175:3725  contract HippoSteroids is Ownable, ReentrancyGuard {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"HippoSteroids.sol\":175:3725  contract HippoSteroids is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e9baec2\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x933a4601\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x933a4601\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd4714aad\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xeff0e29d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x7e9baec2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8ea5220f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91274f68\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x1f53ac02\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x1f53ac02\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x26190b47\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x0902c67a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0e0c7494\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x155dd5ee\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"HippoSteroids.sol\":2194:2406  function setSteroidCost(uint256 newCost) external onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"HippoSteroids.sol\":2407:2516  function decreaseSteroidBalance() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"HippoSteroids.sol\":2648:2829  function withdrawFunds(uint256 amount) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"HippoSteroids.sol\":3184:3352  function setDevWallet(address newDevWallet) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"HippoSteroids.sol\":596:628  address public stakingPoolWallet */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HippoSteroids.sol\":2940:3047  function getContractBalance() external view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"HippoSteroids.sol\":510:559  mapping(address => uint256) public steroidBalance */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HippoSteroids.sol\":566:590  address public devWallet */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HippoSteroids.sol\":3515:3723  function setStakingPoolWallet(address newStakingPoolWallet) external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"HippoSteroids.sol\":430:468  uint256 public steroidCost = 699420000 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"HippoSteroids.sol\":939:1425  function buySteroid() external payable nonReentrant {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      stop\n        /* \"HippoSteroids.sol\":1929:2046  function getSteroidBalance(address user) external view returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"HippoSteroids.sol\":2194:2406  function setSteroidCost(uint256 newCost) external onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_83:\n        /* \"HippoSteroids.sol\":2282:2283  0 */\n      0x00\n        /* \"HippoSteroids.sol\":2272:2279  newCost */\n      dup2\n        /* \"HippoSteroids.sol\":2272:2283  newCost > 0 */\n      gt\n        /* \"HippoSteroids.sol\":2264:2326  require(newCost > 0, \"Steroid cost must be greater than zero\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"HippoSteroids.sol\":2350:2357  newCost */\n      dup1\n        /* \"HippoSteroids.sol\":2336:2347  steroidCost */\n      0x02\n        /* \"HippoSteroids.sol\":2336:2357  steroidCost = newCost */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"HippoSteroids.sol\":2372:2399  SteroidCostUpdated(newCost) */\n      0xbabbcf75b40721548c2b6c6845e36d4bd8ea000d56793fe6ce9cd99f7d4c0758\n        /* \"HippoSteroids.sol\":2391:2398  newCost */\n      dup2\n        /* \"HippoSteroids.sol\":2372:2399  SteroidCostUpdated(newCost) */\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"HippoSteroids.sol\":2194:2406  function setSteroidCost(uint256 newCost) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"HippoSteroids.sol\":2407:2516  function decreaseSteroidBalance() public {... */\n    tag_27:\n        /* \"HippoSteroids.sol\":2512:2513  1 */\n      0x01\n        /* \"HippoSteroids.sol\":2483:2497  steroidBalance */\n      0x03\n        /* \"HippoSteroids.sol\":2483:2509  steroidBalance[msg.sender] */\n      0x00\n        /* \"HippoSteroids.sol\":2498:2508  msg.sender */\n      caller\n        /* \"HippoSteroids.sol\":2483:2509  steroidBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"HippoSteroids.sol\":2483:2513  steroidBalance[msg.sender] - 1 */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"HippoSteroids.sol\":2454:2468  steroidBalance */\n      0x03\n        /* \"HippoSteroids.sol\":2454:2480  steroidBalance[msg.sender] */\n      0x00\n        /* \"HippoSteroids.sol\":2469:2479  msg.sender */\n      caller\n        /* \"HippoSteroids.sol\":2454:2480  steroidBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"HippoSteroids.sol\":2454:2513  steroidBalance[msg.sender] = steroidBalance[msg.sender] - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"HippoSteroids.sol\":2407:2516  function decreaseSteroidBalance() public {... */\n      jump\t// out\n        /* \"HippoSteroids.sol\":2648:2829  function withdrawFunds(uint256 amount) external onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"HippoSteroids.sol\":2734:2755  address(this).balance */\n      selfbalance\n        /* \"HippoSteroids.sol\":2724:2730  amount */\n      dup2\n        /* \"HippoSteroids.sol\":2724:2755  amount <= address(this).balance */\n      gt\n      iszero\n        /* \"HippoSteroids.sol\":2716:2789  require(amount <= address(this).balance, \"Insufficient contract balance\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"HippoSteroids.sol\":2799:2822  _payTo(owner(), amount) */\n      tag_99\n        /* \"HippoSteroids.sol\":2806:2813  owner() */\n      tag_100\n        /* \"HippoSteroids.sol\":2806:2811  owner */\n      tag_57\n        /* \"HippoSteroids.sol\":2806:2813  owner() */\n      jump\t// in\n    tag_100:\n        /* \"HippoSteroids.sol\":2815:2821  amount */\n      dup3\n        /* \"HippoSteroids.sol\":2799:2805  _payTo */\n      tag_101\n        /* \"HippoSteroids.sol\":2799:2822  _payTo(owner(), amount) */\n      jump\t// in\n    tag_99:\n        /* \"HippoSteroids.sol\":2648:2829  function withdrawFunds(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"HippoSteroids.sol\":3184:3352  function setDevWallet(address newDevWallet) external onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_103:\n        /* \"HippoSteroids.sol\":3289:3290  0 */\n      0x00\n        /* \"HippoSteroids.sol\":3265:3291  newDevWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HippoSteroids.sol\":3265:3277  newDevWallet */\n      dup2\n        /* \"HippoSteroids.sol\":3265:3291  newDevWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"HippoSteroids.sol\":3257:3311  require(newDevWallet != address(0), \"Invalid address\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"HippoSteroids.sol\":3333:3345  newDevWallet */\n      dup1\n        /* \"HippoSteroids.sol\":3321:3330  devWallet */\n      0x04\n      0x00\n        /* \"HippoSteroids.sol\":3321:3345  devWallet = newDevWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"HippoSteroids.sol\":3184:3352  function setDevWallet(address newDevWallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"HippoSteroids.sol\":596:628  address public stakingPoolWallet */\n    tag_39:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"HippoSteroids.sol\":2940:3047  function getContractBalance() external view returns (uint256) {... */\n    tag_44:\n        /* \"HippoSteroids.sol\":2993:3000  uint256 */\n      0x00\n        /* \"HippoSteroids.sol\":3019:3040  address(this).balance */\n      selfbalance\n        /* \"HippoSteroids.sol\":3012:3040  return address(this).balance */\n      swap1\n      pop\n        /* \"HippoSteroids.sol\":2940:3047  function getContractBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"HippoSteroids.sol\":510:559  mapping(address => uint256) public steroidBalance */\n    tag_53:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"HippoSteroids.sol\":566:590  address public devWallet */\n    tag_61:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"HippoSteroids.sol\":3515:3723  function setStakingPoolWallet(address newStakingPoolWallet) external onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"HippoSteroids.sol\":3644:3645  0 */\n      0x00\n        /* \"HippoSteroids.sol\":3612:3646  newStakingPoolWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HippoSteroids.sol\":3612:3632  newStakingPoolWallet */\n      dup2\n        /* \"HippoSteroids.sol\":3612:3646  newStakingPoolWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"HippoSteroids.sol\":3604:3666  require(newStakingPoolWallet != address(0), \"Invalid address\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_107\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"HippoSteroids.sol\":3696:3716  newStakingPoolWallet */\n      dup1\n        /* \"HippoSteroids.sol\":3676:3693  stakingPoolWallet */\n      0x05\n      0x00\n        /* \"HippoSteroids.sol\":3676:3716  stakingPoolWallet = newStakingPoolWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"HippoSteroids.sol\":3515:3723  function setStakingPoolWallet(address newStakingPoolWallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"HippoSteroids.sol\":430:468  uint256 public steroidCost = 699420000 */\n    tag_69:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"HippoSteroids.sol\":939:1425  function buySteroid() external payable nonReentrant {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_121\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_122\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_121:\n        /* \"HippoSteroids.sol\":1022:1033  steroidCost */\n      sload(0x02)\n        /* \"HippoSteroids.sol\":1009:1018  msg.value */\n      callvalue\n        /* \"HippoSteroids.sol\":1009:1033  msg.value >= steroidCost */\n      lt\n      iszero\n        /* \"HippoSteroids.sol\":1001:1072  require(msg.value >= steroidCost, \"Insufficient funds for Steroid NFT\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"HippoSteroids.sol\":1083:1097  steroidBalance */\n      0x03\n        /* \"HippoSteroids.sol\":1083:1109  steroidBalance[msg.sender] */\n      0x00\n        /* \"HippoSteroids.sol\":1098:1108  msg.sender */\n      caller\n        /* \"HippoSteroids.sol\":1083:1109  steroidBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"HippoSteroids.sol\":1083:1111  steroidBalance[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"HippoSteroids.sol\":1199:1215  uint256 devShare */\n      0x00\n        /* \"HippoSteroids.sol\":1230:1231  2 */\n      0x02\n        /* \"HippoSteroids.sol\":1218:1227  msg.value */\n      callvalue\n        /* \"HippoSteroids.sol\":1218:1231  msg.value / 2 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"HippoSteroids.sol\":1199:1231  uint256 devShare = msg.value / 2 */\n      swap1\n      pop\n        /* \"HippoSteroids.sol\":1241:1261  uint256 stakingShare */\n      0x00\n        /* \"HippoSteroids.sol\":1276:1284  devShare */\n      dup2\n        /* \"HippoSteroids.sol\":1264:1273  msg.value */\n      callvalue\n        /* \"HippoSteroids.sol\":1264:1284  msg.value - devShare */\n      tag_131\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_131:\n        /* \"HippoSteroids.sol\":1241:1284  uint256 stakingShare = msg.value - devShare */\n      swap1\n      pop\n        /* \"HippoSteroids.sol\":1295:1322  _payTo(devWallet, devShare) */\n      tag_132\n        /* \"HippoSteroids.sol\":1302:1311  devWallet */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HippoSteroids.sol\":1313:1321  devShare */\n      dup4\n        /* \"HippoSteroids.sol\":1295:1301  _payTo */\n      tag_101\n        /* \"HippoSteroids.sol\":1295:1322  _payTo(devWallet, devShare) */\n      jump\t// in\n    tag_132:\n        /* \"HippoSteroids.sol\":1332:1371  _payTo(stakingPoolWallet, stakingShare) */\n      tag_133\n        /* \"HippoSteroids.sol\":1339:1356  stakingPoolWallet */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HippoSteroids.sol\":1358:1370  stakingShare */\n      dup3\n        /* \"HippoSteroids.sol\":1332:1338  _payTo */\n      tag_101\n        /* \"HippoSteroids.sol\":1332:1371  _payTo(stakingPoolWallet, stakingShare) */\n      jump\t// in\n    tag_133:\n        /* \"HippoSteroids.sol\":1404:1414  msg.sender */\n      caller\n        /* \"HippoSteroids.sol\":1387:1418  SteroidPurchased(msg.sender, 1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb66854451839ebc00f6f3f0510f064e36dbcbe3da250cdc9b04fd218078b450d\n        /* \"HippoSteroids.sol\":1416:1417  1 */\n      0x01\n        /* \"HippoSteroids.sol\":1387:1418  SteroidPurchased(msg.sender, 1) */\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"HippoSteroids.sol\":991:1425  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_136\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_136:\n        /* \"HippoSteroids.sol\":939:1425  function buySteroid() external payable nonReentrant {... */\n      jump\t// out\n        /* \"HippoSteroids.sol\":1929:2046  function getSteroidBalance(address user) external view returns (uint256) {... */\n    tag_76:\n        /* \"HippoSteroids.sol\":1993:2000  uint256 */\n      0x00\n        /* \"HippoSteroids.sol\":2019:2033  steroidBalance */\n      0x03\n        /* \"HippoSteroids.sol\":2019:2039  steroidBalance[user] */\n      0x00\n        /* \"HippoSteroids.sol\":2034:2038  user */\n      dup4\n        /* \"HippoSteroids.sol\":2019:2039  steroidBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"HippoSteroids.sol\":2012:2039  return steroidBalance[user] */\n      swap1\n      pop\n        /* \"HippoSteroids.sol\":1929:2046  function getSteroidBalance(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"HippoSteroids.sol\":1596:1767  function _payTo(address to, uint256 amount) internal {... */\n    tag_101:\n        /* \"HippoSteroids.sol\":1660:1672  bool success */\n      0x00\n        /* \"HippoSteroids.sol\":1678:1680  to */\n      dup3\n        /* \"HippoSteroids.sol\":1678:1685  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"HippoSteroids.sol\":1693:1699  amount */\n      dup3\n        /* \"HippoSteroids.sol\":1678:1704  to.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_157\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_156)\n    tag_157:\n      0x60\n      swap2\n      pop\n    tag_156:\n      pop\n        /* \"HippoSteroids.sol\":1659:1704  (bool success, ) = to.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"HippoSteroids.sol\":1722:1729  success */\n      dup1\n        /* \"HippoSteroids.sol\":1714:1760  require(success, \"Transfer to wallet failed.\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"HippoSteroids.sol\":1649:1767  {... */\n      pop\n        /* \"HippoSteroids.sol\":1596:1767  function _payTo(address to, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_169:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_171:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_172:\n        /* \"#utility.yul\":490:514   */\n      tag_208\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_171\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_209:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_173:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_211\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_172\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_23:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_214\n      tag_169\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":766:885   */\n    tag_213:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_215\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_173\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_174:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_175:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_218\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_174\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_176:\n        /* \"#utility.yul\":1332:1356   */\n      tag_220\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_175\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_221:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_177:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_223\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_176\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_35:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_226\n      tag_169\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1608:1727   */\n    tag_225:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_227\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_177\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1985   */\n    tag_178:\n        /* \"#utility.yul\":1954:1978   */\n      tag_229\n        /* \"#utility.yul\":1972:1977   */\n      dup2\n        /* \"#utility.yul\":1954:1978   */\n      tag_175\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1949:1952   */\n      dup3\n        /* \"#utility.yul\":1942:1979   */\n      mstore\n        /* \"#utility.yul\":1867:1985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1991:2213   */\n    tag_41:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x20\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_231\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup5\n        /* \"#utility.yul\":2135:2206   */\n      tag_178\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1991:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_179:\n        /* \"#utility.yul\":2306:2330   */\n      tag_233\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_171\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2565   */\n    tag_46:\n        /* \"#utility.yul\":2436:2440   */\n      0x00\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2477   */\n      add\n        /* \"#utility.yul\":2451:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2487:2558   */\n      tag_235\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2544:2553   */\n      dup4\n        /* \"#utility.yul\":2540:2557   */\n      add\n        /* \"#utility.yul\":2531:2537   */\n      dup5\n        /* \"#utility.yul\":2487:2558   */\n      tag_179\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2343:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2740   */\n    tag_180:\n        /* \"#utility.yul\":2655:2666   */\n      0x00\n        /* \"#utility.yul\":2689:2695   */\n      dup3\n        /* \"#utility.yul\":2684:2687   */\n      dup3\n        /* \"#utility.yul\":2677:2696   */\n      mstore\n        /* \"#utility.yul\":2729:2733   */\n      0x20\n        /* \"#utility.yul\":2724:2727   */\n      dup3\n        /* \"#utility.yul\":2720:2734   */\n      add\n        /* \"#utility.yul\":2705:2734   */\n      swap1\n      pop\n        /* \"#utility.yul\":2571:2740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:2971   */\n    tag_181:\n        /* \"#utility.yul\":2886:2920   */\n      0x537465726f696420636f7374206d757374206265206772656174657220746861\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2874:2880   */\n      dup3\n        /* \"#utility.yul\":2870:2884   */\n      add\n        /* \"#utility.yul\":2863:2921   */\n      mstore\n        /* \"#utility.yul\":2955:2963   */\n      0x6e207a65726f0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2950:2952   */\n      0x20\n        /* \"#utility.yul\":2942:2948   */\n      dup3\n        /* \"#utility.yul\":2938:2953   */\n      add\n        /* \"#utility.yul\":2931:2964   */\n      mstore\n        /* \"#utility.yul\":2746:2971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2977:3343   */\n    tag_182:\n        /* \"#utility.yul\":3119:3122   */\n      0x00\n        /* \"#utility.yul\":3140:3207   */\n      tag_239\n        /* \"#utility.yul\":3204:3206   */\n      0x26\n        /* \"#utility.yul\":3199:3202   */\n      dup4\n        /* \"#utility.yul\":3140:3207   */\n      tag_180\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3133:3207   */\n      swap2\n      pop\n        /* \"#utility.yul\":3216:3309   */\n      tag_240\n        /* \"#utility.yul\":3305:3308   */\n      dup3\n        /* \"#utility.yul\":3216:3309   */\n      tag_181\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3334:3336   */\n      0x40\n        /* \"#utility.yul\":3329:3332   */\n      dup3\n        /* \"#utility.yul\":3325:3337   */\n      add\n        /* \"#utility.yul\":3318:3337   */\n      swap1\n      pop\n        /* \"#utility.yul\":2977:3343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3349:3768   */\n    tag_88:\n        /* \"#utility.yul\":3515:3519   */\n      0x00\n        /* \"#utility.yul\":3553:3555   */\n      0x20\n        /* \"#utility.yul\":3542:3551   */\n      dup3\n        /* \"#utility.yul\":3538:3556   */\n      add\n        /* \"#utility.yul\":3530:3556   */\n      swap1\n      pop\n        /* \"#utility.yul\":3602:3611   */\n      dup2\n        /* \"#utility.yul\":3596:3600   */\n      dup2\n        /* \"#utility.yul\":3592:3612   */\n      sub\n        /* \"#utility.yul\":3588:3589   */\n      0x00\n        /* \"#utility.yul\":3577:3586   */\n      dup4\n        /* \"#utility.yul\":3573:3590   */\n      add\n        /* \"#utility.yul\":3566:3613   */\n      mstore\n        /* \"#utility.yul\":3630:3761   */\n      tag_242\n        /* \"#utility.yul\":3756:3760   */\n      dup2\n        /* \"#utility.yul\":3630:3761   */\n      tag_182\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3622:3761   */\n      swap1\n      pop\n        /* \"#utility.yul\":3349:3768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3774:3954   */\n    tag_183:\n        /* \"#utility.yul\":3822:3899   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3819:3820   */\n      0x00\n        /* \"#utility.yul\":3812:3900   */\n      mstore\n        /* \"#utility.yul\":3919:3923   */\n      0x11\n        /* \"#utility.yul\":3916:3917   */\n      0x04\n        /* \"#utility.yul\":3909:3924   */\n      mstore\n        /* \"#utility.yul\":3943:3947   */\n      0x24\n        /* \"#utility.yul\":3940:3941   */\n      0x00\n        /* \"#utility.yul\":3933:3948   */\n      revert\n        /* \"#utility.yul\":3960:4154   */\n    tag_92:\n        /* \"#utility.yul\":4000:4004   */\n      0x00\n        /* \"#utility.yul\":4020:4040   */\n      tag_245\n        /* \"#utility.yul\":4038:4039   */\n      dup3\n        /* \"#utility.yul\":4020:4040   */\n      tag_171\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4015:4040   */\n      swap2\n      pop\n        /* \"#utility.yul\":4054:4074   */\n      tag_246\n        /* \"#utility.yul\":4072:4073   */\n      dup4\n        /* \"#utility.yul\":4054:4074   */\n      tag_171\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4049:4074   */\n      swap3\n      pop\n        /* \"#utility.yul\":4098:4099   */\n      dup3\n        /* \"#utility.yul\":4095:4096   */\n      dup3\n        /* \"#utility.yul\":4091:4100   */\n      sub\n        /* \"#utility.yul\":4083:4100   */\n      swap1\n      pop\n        /* \"#utility.yul\":4122:4123   */\n      dup2\n        /* \"#utility.yul\":4116:4120   */\n      dup2\n        /* \"#utility.yul\":4113:4124   */\n      gt\n        /* \"#utility.yul\":4110:4147   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":4127:4145   */\n      tag_248\n      tag_183\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4110:4147   */\n    tag_247:\n        /* \"#utility.yul\":3960:4154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4160:4339   */\n    tag_184:\n        /* \"#utility.yul\":4300:4331   */\n      0x496e73756666696369656e7420636f6e74726163742062616c616e6365000000\n        /* \"#utility.yul\":4296:4297   */\n      0x00\n        /* \"#utility.yul\":4288:4294   */\n      dup3\n        /* \"#utility.yul\":4284:4298   */\n      add\n        /* \"#utility.yul\":4277:4332   */\n      mstore\n        /* \"#utility.yul\":4160:4339   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4345:4711   */\n    tag_185:\n        /* \"#utility.yul\":4487:4490   */\n      0x00\n        /* \"#utility.yul\":4508:4575   */\n      tag_251\n        /* \"#utility.yul\":4572:4574   */\n      0x1d\n        /* \"#utility.yul\":4567:4570   */\n      dup4\n        /* \"#utility.yul\":4508:4575   */\n      tag_180\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4501:4575   */\n      swap2\n      pop\n        /* \"#utility.yul\":4584:4677   */\n      tag_252\n        /* \"#utility.yul\":4673:4676   */\n      dup3\n        /* \"#utility.yul\":4584:4677   */\n      tag_184\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4702:4704   */\n      0x20\n        /* \"#utility.yul\":4697:4700   */\n      dup3\n        /* \"#utility.yul\":4693:4705   */\n      add\n        /* \"#utility.yul\":4686:4705   */\n      swap1\n      pop\n        /* \"#utility.yul\":4345:4711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4717:5136   */\n    tag_98:\n        /* \"#utility.yul\":4883:4887   */\n      0x00\n        /* \"#utility.yul\":4921:4923   */\n      0x20\n        /* \"#utility.yul\":4910:4919   */\n      dup3\n        /* \"#utility.yul\":4906:4924   */\n      add\n        /* \"#utility.yul\":4898:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4970:4979   */\n      dup2\n        /* \"#utility.yul\":4964:4968   */\n      dup2\n        /* \"#utility.yul\":4960:4980   */\n      sub\n        /* \"#utility.yul\":4956:4957   */\n      0x00\n        /* \"#utility.yul\":4945:4954   */\n      dup4\n        /* \"#utility.yul\":4941:4958   */\n      add\n        /* \"#utility.yul\":4934:4981   */\n      mstore\n        /* \"#utility.yul\":4998:5129   */\n      tag_254\n        /* \"#utility.yul\":5124:5128   */\n      dup2\n        /* \"#utility.yul\":4998:5129   */\n      tag_185\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4990:5129   */\n      swap1\n      pop\n        /* \"#utility.yul\":4717:5136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5142:5307   */\n    tag_186:\n        /* \"#utility.yul\":5282:5299   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":5278:5279   */\n      0x00\n        /* \"#utility.yul\":5270:5276   */\n      dup3\n        /* \"#utility.yul\":5266:5280   */\n      add\n        /* \"#utility.yul\":5259:5300   */\n      mstore\n        /* \"#utility.yul\":5142:5307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5313:5679   */\n    tag_187:\n        /* \"#utility.yul\":5455:5458   */\n      0x00\n        /* \"#utility.yul\":5476:5543   */\n      tag_257\n        /* \"#utility.yul\":5540:5542   */\n      0x0f\n        /* \"#utility.yul\":5535:5538   */\n      dup4\n        /* \"#utility.yul\":5476:5543   */\n      tag_180\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5469:5543   */\n      swap2\n      pop\n        /* \"#utility.yul\":5552:5645   */\n      tag_258\n        /* \"#utility.yul\":5641:5644   */\n      dup3\n        /* \"#utility.yul\":5552:5645   */\n      tag_186\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5670:5672   */\n      0x20\n        /* \"#utility.yul\":5665:5668   */\n      dup3\n        /* \"#utility.yul\":5661:5673   */\n      add\n        /* \"#utility.yul\":5654:5673   */\n      swap1\n      pop\n        /* \"#utility.yul\":5313:5679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5685:6104   */\n    tag_107:\n        /* \"#utility.yul\":5851:5855   */\n      0x00\n        /* \"#utility.yul\":5889:5891   */\n      0x20\n        /* \"#utility.yul\":5878:5887   */\n      dup3\n        /* \"#utility.yul\":5874:5892   */\n      add\n        /* \"#utility.yul\":5866:5892   */\n      swap1\n      pop\n        /* \"#utility.yul\":5938:5947   */\n      dup2\n        /* \"#utility.yul\":5932:5936   */\n      dup2\n        /* \"#utility.yul\":5928:5948   */\n      sub\n        /* \"#utility.yul\":5924:5925   */\n      0x00\n        /* \"#utility.yul\":5913:5922   */\n      dup4\n        /* \"#utility.yul\":5909:5926   */\n      add\n        /* \"#utility.yul\":5902:5949   */\n      mstore\n        /* \"#utility.yul\":5966:6097   */\n      tag_260\n        /* \"#utility.yul\":6092:6096   */\n      dup2\n        /* \"#utility.yul\":5966:6097   */\n      tag_187\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5958:6097   */\n      swap1\n      pop\n        /* \"#utility.yul\":5685:6104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6110:6331   */\n    tag_188:\n        /* \"#utility.yul\":6250:6284   */\n      0x496e73756666696369656e742066756e647320666f7220537465726f6964204e\n        /* \"#utility.yul\":6246:6247   */\n      0x00\n        /* \"#utility.yul\":6238:6244   */\n      dup3\n        /* \"#utility.yul\":6234:6248   */\n      add\n        /* \"#utility.yul\":6227:6285   */\n      mstore\n        /* \"#utility.yul\":6319:6323   */\n      0x4654000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6314:6316   */\n      0x20\n        /* \"#utility.yul\":6306:6312   */\n      dup3\n        /* \"#utility.yul\":6302:6317   */\n      add\n        /* \"#utility.yul\":6295:6324   */\n      mstore\n        /* \"#utility.yul\":6110:6331   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6337:6703   */\n    tag_189:\n        /* \"#utility.yul\":6479:6482   */\n      0x00\n        /* \"#utility.yul\":6500:6567   */\n      tag_263\n        /* \"#utility.yul\":6564:6566   */\n      0x22\n        /* \"#utility.yul\":6559:6562   */\n      dup4\n        /* \"#utility.yul\":6500:6567   */\n      tag_180\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6493:6567   */\n      swap2\n      pop\n        /* \"#utility.yul\":6576:6669   */\n      tag_264\n        /* \"#utility.yul\":6665:6668   */\n      dup3\n        /* \"#utility.yul\":6576:6669   */\n      tag_188\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6694:6696   */\n      0x40\n        /* \"#utility.yul\":6689:6692   */\n      dup3\n        /* \"#utility.yul\":6685:6697   */\n      add\n        /* \"#utility.yul\":6678:6697   */\n      swap1\n      pop\n        /* \"#utility.yul\":6337:6703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6709:7128   */\n    tag_126:\n        /* \"#utility.yul\":6875:6879   */\n      0x00\n        /* \"#utility.yul\":6913:6915   */\n      0x20\n        /* \"#utility.yul\":6902:6911   */\n      dup3\n        /* \"#utility.yul\":6898:6916   */\n      add\n        /* \"#utility.yul\":6890:6916   */\n      swap1\n      pop\n        /* \"#utility.yul\":6962:6971   */\n      dup2\n        /* \"#utility.yul\":6956:6960   */\n      dup2\n        /* \"#utility.yul\":6952:6972   */\n      sub\n        /* \"#utility.yul\":6948:6949   */\n      0x00\n        /* \"#utility.yul\":6937:6946   */\n      dup4\n        /* \"#utility.yul\":6933:6950   */\n      add\n        /* \"#utility.yul\":6926:6973   */\n      mstore\n        /* \"#utility.yul\":6990:7121   */\n      tag_266\n        /* \"#utility.yul\":7116:7120   */\n      dup2\n        /* \"#utility.yul\":6990:7121   */\n      tag_189\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6982:7121   */\n      swap1\n      pop\n        /* \"#utility.yul\":6709:7128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7134:7367   */\n    tag_128:\n        /* \"#utility.yul\":7173:7176   */\n      0x00\n        /* \"#utility.yul\":7196:7220   */\n      tag_268\n        /* \"#utility.yul\":7214:7219   */\n      dup3\n        /* \"#utility.yul\":7196:7220   */\n      tag_171\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7187:7220   */\n      swap2\n      pop\n        /* \"#utility.yul\":7242:7308   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7235:7240   */\n      dup3\n        /* \"#utility.yul\":7232:7309   */\n      sub\n        /* \"#utility.yul\":7229:7332   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":7312:7330   */\n      tag_270\n      tag_183\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7229:7332   */\n    tag_269:\n        /* \"#utility.yul\":7359:7360   */\n      0x01\n        /* \"#utility.yul\":7352:7357   */\n      dup3\n        /* \"#utility.yul\":7348:7361   */\n      add\n        /* \"#utility.yul\":7341:7361   */\n      swap1\n      pop\n        /* \"#utility.yul\":7134:7367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7373:7553   */\n    tag_190:\n        /* \"#utility.yul\":7421:7498   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7418:7419   */\n      0x00\n        /* \"#utility.yul\":7411:7499   */\n      mstore\n        /* \"#utility.yul\":7518:7522   */\n      0x12\n        /* \"#utility.yul\":7515:7516   */\n      0x04\n        /* \"#utility.yul\":7508:7523   */\n      mstore\n        /* \"#utility.yul\":7542:7546   */\n      0x24\n        /* \"#utility.yul\":7539:7540   */\n      0x00\n        /* \"#utility.yul\":7532:7547   */\n      revert\n        /* \"#utility.yul\":7559:7744   */\n    tag_130:\n        /* \"#utility.yul\":7599:7600   */\n      0x00\n        /* \"#utility.yul\":7616:7636   */\n      tag_273\n        /* \"#utility.yul\":7634:7635   */\n      dup3\n        /* \"#utility.yul\":7616:7636   */\n      tag_171\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7611:7636   */\n      swap2\n      pop\n        /* \"#utility.yul\":7650:7670   */\n      tag_274\n        /* \"#utility.yul\":7668:7669   */\n      dup4\n        /* \"#utility.yul\":7650:7670   */\n      tag_171\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7645:7670   */\n      swap3\n      pop\n        /* \"#utility.yul\":7689:7690   */\n      dup3\n        /* \"#utility.yul\":7679:7714   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":7694:7712   */\n      tag_276\n      tag_190\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7679:7714   */\n    tag_275:\n        /* \"#utility.yul\":7736:7737   */\n      dup3\n        /* \"#utility.yul\":7733:7734   */\n      dup3\n        /* \"#utility.yul\":7729:7738   */\n      div\n        /* \"#utility.yul\":7724:7738   */\n      swap1\n      pop\n        /* \"#utility.yul\":7559:7744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7750:7835   */\n    tag_191:\n        /* \"#utility.yul\":7795:7802   */\n      0x00\n        /* \"#utility.yul\":7824:7829   */\n      dup2\n        /* \"#utility.yul\":7813:7829   */\n      swap1\n      pop\n        /* \"#utility.yul\":7750:7835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:7901   */\n    tag_192:\n        /* \"#utility.yul\":7869:7872   */\n      0x00\n        /* \"#utility.yul\":7890:7895   */\n      dup2\n        /* \"#utility.yul\":7883:7895   */\n      swap1\n      pop\n        /* \"#utility.yul\":7841:7901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7907:8065   */\n    tag_193:\n        /* \"#utility.yul\":7965:7974   */\n      0x00\n        /* \"#utility.yul\":7998:8059   */\n      tag_280\n        /* \"#utility.yul\":8016:8058   */\n      tag_281\n        /* \"#utility.yul\":8025:8057   */\n      tag_282\n        /* \"#utility.yul\":8051:8056   */\n      dup5\n        /* \"#utility.yul\":8025:8057   */\n      tag_191\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8016:8058   */\n      tag_192\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7998:8059   */\n      tag_171\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":7985:8059   */\n      swap1\n      pop\n        /* \"#utility.yul\":7907:8065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8071:8218   */\n    tag_194:\n        /* \"#utility.yul\":8166:8211   */\n      tag_284\n        /* \"#utility.yul\":8205:8210   */\n      dup2\n        /* \"#utility.yul\":8166:8211   */\n      tag_193\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8161:8164   */\n      dup3\n        /* \"#utility.yul\":8154:8212   */\n      mstore\n        /* \"#utility.yul\":8071:8218   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8224:8462   */\n    tag_135:\n        /* \"#utility.yul\":8325:8329   */\n      0x00\n        /* \"#utility.yul\":8363:8365   */\n      0x20\n        /* \"#utility.yul\":8352:8361   */\n      dup3\n        /* \"#utility.yul\":8348:8366   */\n      add\n        /* \"#utility.yul\":8340:8366   */\n      swap1\n      pop\n        /* \"#utility.yul\":8376:8455   */\n      tag_286\n        /* \"#utility.yul\":8452:8453   */\n      0x00\n        /* \"#utility.yul\":8441:8450   */\n      dup4\n        /* \"#utility.yul\":8437:8454   */\n      add\n        /* \"#utility.yul\":8428:8434   */\n      dup5\n        /* \"#utility.yul\":8376:8455   */\n      tag_194\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8224:8462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8468:8615   */\n    tag_195:\n        /* \"#utility.yul\":8569:8580   */\n      0x00\n        /* \"#utility.yul\":8606:8609   */\n      dup2\n        /* \"#utility.yul\":8591:8609   */\n      swap1\n      pop\n        /* \"#utility.yul\":8468:8615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8621:8735   */\n    tag_196:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:9139   */\n    tag_197:\n        /* \"#utility.yul\":8900:8903   */\n      0x00\n        /* \"#utility.yul\":8921:9004   */\n      tag_290\n        /* \"#utility.yul\":9002:9003   */\n      0x00\n        /* \"#utility.yul\":8997:9000   */\n      dup4\n        /* \"#utility.yul\":8921:9004   */\n      tag_195\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8914:9004   */\n      swap2\n      pop\n        /* \"#utility.yul\":9013:9106   */\n      tag_291\n        /* \"#utility.yul\":9102:9105   */\n      dup3\n        /* \"#utility.yul\":9013:9106   */\n      tag_196\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9131:9132   */\n      0x00\n        /* \"#utility.yul\":9126:9129   */\n      dup3\n        /* \"#utility.yul\":9122:9133   */\n      add\n        /* \"#utility.yul\":9115:9133   */\n      swap1\n      pop\n        /* \"#utility.yul\":8741:9139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9145:9524   */\n    tag_154:\n        /* \"#utility.yul\":9329:9332   */\n      0x00\n        /* \"#utility.yul\":9351:9498   */\n      tag_293\n        /* \"#utility.yul\":9494:9497   */\n      dup3\n        /* \"#utility.yul\":9351:9498   */\n      tag_197\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9344:9498   */\n      swap2\n      pop\n        /* \"#utility.yul\":9515:9518   */\n      dup2\n        /* \"#utility.yul\":9508:9518   */\n      swap1\n      pop\n        /* \"#utility.yul\":9145:9524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9530:9706   */\n    tag_198:\n        /* \"#utility.yul\":9670:9698   */\n      0x5472616e7366657220746f2077616c6c6574206661696c65642e000000000000\n        /* \"#utility.yul\":9666:9667   */\n      0x00\n        /* \"#utility.yul\":9658:9664   */\n      dup3\n        /* \"#utility.yul\":9654:9668   */\n      add\n        /* \"#utility.yul\":9647:9699   */\n      mstore\n        /* \"#utility.yul\":9530:9706   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9712:10078   */\n    tag_199:\n        /* \"#utility.yul\":9854:9857   */\n      0x00\n        /* \"#utility.yul\":9875:9942   */\n      tag_296\n        /* \"#utility.yul\":9939:9941   */\n      0x1a\n        /* \"#utility.yul\":9934:9937   */\n      dup4\n        /* \"#utility.yul\":9875:9942   */\n      tag_180\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9868:9942   */\n      swap2\n      pop\n        /* \"#utility.yul\":9951:10044   */\n      tag_297\n        /* \"#utility.yul\":10040:10043   */\n      dup3\n        /* \"#utility.yul\":9951:10044   */\n      tag_198\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":10069:10071   */\n      0x20\n        /* \"#utility.yul\":10064:10067   */\n      dup3\n        /* \"#utility.yul\":10060:10072   */\n      add\n        /* \"#utility.yul\":10053:10072   */\n      swap1\n      pop\n        /* \"#utility.yul\":9712:10078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10084:10503   */\n    tag_160:\n        /* \"#utility.yul\":10250:10254   */\n      0x00\n        /* \"#utility.yul\":10288:10290   */\n      0x20\n        /* \"#utility.yul\":10277:10286   */\n      dup3\n        /* \"#utility.yul\":10273:10291   */\n      add\n        /* \"#utility.yul\":10265:10291   */\n      swap1\n      pop\n        /* \"#utility.yul\":10337:10346   */\n      dup2\n        /* \"#utility.yul\":10331:10335   */\n      dup2\n        /* \"#utility.yul\":10327:10347   */\n      sub\n        /* \"#utility.yul\":10323:10324   */\n      0x00\n        /* \"#utility.yul\":10312:10321   */\n      dup4\n        /* \"#utility.yul\":10308:10325   */\n      add\n        /* \"#utility.yul\":10301:10348   */\n      mstore\n        /* \"#utility.yul\":10365:10496   */\n      tag_299\n        /* \"#utility.yul\":10491:10495   */\n      dup2\n        /* \"#utility.yul\":10365:10496   */\n      tag_199\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":10357:10496   */\n      swap1\n      pop\n        /* \"#utility.yul\":10084:10503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10509:10690   */\n    tag_200:\n        /* \"#utility.yul\":10649:10682   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10645:10646   */\n      0x00\n        /* \"#utility.yul\":10637:10643   */\n      dup3\n        /* \"#utility.yul\":10633:10647   */\n      add\n        /* \"#utility.yul\":10626:10683   */\n      mstore\n        /* \"#utility.yul\":10509:10690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10696:11062   */\n    tag_201:\n        /* \"#utility.yul\":10838:10841   */\n      0x00\n        /* \"#utility.yul\":10859:10926   */\n      tag_302\n        /* \"#utility.yul\":10923:10925   */\n      0x1f\n        /* \"#utility.yul\":10918:10921   */\n      dup4\n        /* \"#utility.yul\":10859:10926   */\n      tag_180\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10852:10926   */\n      swap2\n      pop\n        /* \"#utility.yul\":10935:11028   */\n      tag_303\n        /* \"#utility.yul\":11024:11027   */\n      dup3\n        /* \"#utility.yul\":10935:11028   */\n      tag_200\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":11053:11055   */\n      0x20\n        /* \"#utility.yul\":11048:11051   */\n      dup3\n        /* \"#utility.yul\":11044:11056   */\n      add\n        /* \"#utility.yul\":11037:11056   */\n      swap1\n      pop\n        /* \"#utility.yul\":10696:11062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11068:11487   */\n    tag_165:\n        /* \"#utility.yul\":11234:11238   */\n      0x00\n        /* \"#utility.yul\":11272:11274   */\n      0x20\n        /* \"#utility.yul\":11261:11270   */\n      dup3\n        /* \"#utility.yul\":11257:11275   */\n      add\n        /* \"#utility.yul\":11249:11275   */\n      swap1\n      pop\n        /* \"#utility.yul\":11321:11330   */\n      dup2\n        /* \"#utility.yul\":11315:11319   */\n      dup2\n        /* \"#utility.yul\":11311:11331   */\n      sub\n        /* \"#utility.yul\":11307:11308   */\n      0x00\n        /* \"#utility.yul\":11296:11305   */\n      dup4\n        /* \"#utility.yul\":11292:11309   */\n      add\n        /* \"#utility.yul\":11285:11332   */\n      mstore\n        /* \"#utility.yul\":11349:11480   */\n      tag_305\n        /* \"#utility.yul\":11475:11479   */\n      dup2\n        /* \"#utility.yul\":11349:11480   */\n      tag_201\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11341:11480   */\n      swap1\n      pop\n        /* \"#utility.yul\":11068:11487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209bec2334fd8be34c17fb212db14076b52aa2720f89bf382e230c31b5ebba687064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_271": {
									"entryPoint": null,
									"id": 271,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 339,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1707:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:4"
															},
															"nodeType": "YulIf",
															"src": "949:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:4",
														"type": ""
													}
												],
												"src": "845:507:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1423:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1411:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1418:3:4",
														"type": ""
													}
												],
												"src": "1358:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1552:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1564:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1575:4:4",
														"type": ""
													}
												],
												"src": "1482:222:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526329b04d6060025534801562000018575f80fd5b50604051620014203803806200142083398181016040528101906200003e919062000279565b815f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a99190620002cf565b60405180910390fd5b620000c3816200015360201b60201c565b50600180819055508160045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002ea565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002438262000218565b9050919050565b620002558162000237565b811462000260575f80fd5b50565b5f8151905062000273816200024a565b92915050565b5f806040838503121562000292576200029162000214565b5b5f620002a18582860162000263565b9250506020620002b48582860162000263565b9150509250929050565b620002c98162000237565b82525050565b5f602082019050620002e45f830184620002be565b92915050565b61112880620002f85f395ff3fe6080604052600436106100e7575f3560e01c80637e9baec211610089578063933a460111610058578063933a46011461029b578063d4714aad146102c5578063eff0e29d146102cf578063f2fde38b1461030b576100e7565b80637e9baec2146101e35780638da5cb5b1461021f5780638ea5220f1461024957806391274f6814610273576100e7565b80631f53ac02116100c55780631f53ac021461015157806326190b47146101795780636f9fb98a146101a3578063715018a6146101cd576100e7565b80630902c67a146100eb5780630e0c749414610113578063155dd5ee14610129575b5f80fd5b3480156100f6575f80fd5b50610111600480360381019061010c9190610b86565b610333565b005b34801561011e575f80fd5b506101276103be565b005b348015610134575f80fd5b5061014f600480360381019061014a9190610b86565b61044b565b005b34801561015c575f80fd5b5061017760048036038101906101729190610c0b565b6104aa565b005b348015610184575f80fd5b5061018d610563565b60405161019a9190610c45565b60405180910390f35b3480156101ae575f80fd5b506101b7610588565b6040516101c49190610c6d565b60405180910390f35b3480156101d8575f80fd5b506101e161058f565b005b3480156101ee575f80fd5b5061020960048036038101906102049190610c0b565b6105a2565b6040516102169190610c6d565b60405180910390f35b34801561022a575f80fd5b506102336105b7565b6040516102409190610c45565b60405180910390f35b348015610254575f80fd5b5061025d6105de565b60405161026a9190610c45565b60405180910390f35b34801561027e575f80fd5b5061029960048036038101906102949190610c0b565b610603565b005b3480156102a6575f80fd5b506102af6106bc565b6040516102bc9190610c6d565b60405180910390f35b6102cd6106c2565b005b3480156102da575f80fd5b506102f560048036038101906102f09190610c0b565b610831565b6040516103029190610c6d565b60405180910390f35b348015610316575f80fd5b50610331600480360381019061032c9190610c0b565b610877565b005b61033b6108fb565b5f811161037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037490610d06565b60405180910390fd5b806002819055507fbabbcf75b40721548c2b6c6845e36d4bd8ea000d56793fe6ce9cd99f7d4c0758816040516103b39190610c6d565b60405180910390a150565b600160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546104089190610d51565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550565b6104536108fb565b47811115610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90610dce565b60405180910390fd5b6104a76104a16105b7565b82610982565b50565b6104b26108fb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051790610e36565b60405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f47905090565b6105976108fb565b6105a05f610a2f565b565b6003602052805f5260405f205f915090505481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61060b6108fb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610679576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067090610e36565b60405180910390fd5b8060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025481565b6106ca610af0565b60025434101561070f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070690610ec4565b60405180910390fd5b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061075c90610ee2565b91905055505f60023461076f9190610f56565b90505f813461077e9190610d51565b90506107ab60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610982565b6107d660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610982565b3373ffffffffffffffffffffffffffffffffffffffff167fb66854451839ebc00f6f3f0510f064e36dbcbe3da250cdc9b04fd218078b450d600160405161081d9190610fc8565b60405180910390a2505061082f610b3f565b565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61087f6108fb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108ef575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108e69190610c45565b60405180910390fd5b6108f881610a2f565b50565b610903610b48565b73ffffffffffffffffffffffffffffffffffffffff166109216105b7565b73ffffffffffffffffffffffffffffffffffffffff161461098057610944610b48565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109779190610c45565b60405180910390fd5b565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040516109a79061100e565b5f6040518083038185875af1925050503d805f81146109e1576040519150601f19603f3d011682016040523d82523d5f602084013e6109e6565b606091505b5050905080610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a219061106c565b60405180910390fd5b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610b35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2c906110d4565b60405180910390fd5b6002600181905550565b60018081905550565b5f33905090565b5f80fd5b5f819050919050565b610b6581610b53565b8114610b6f575f80fd5b50565b5f81359050610b8081610b5c565b92915050565b5f60208284031215610b9b57610b9a610b4f565b5b5f610ba884828501610b72565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610bda82610bb1565b9050919050565b610bea81610bd0565b8114610bf4575f80fd5b50565b5f81359050610c0581610be1565b92915050565b5f60208284031215610c2057610c1f610b4f565b5b5f610c2d84828501610bf7565b91505092915050565b610c3f81610bd0565b82525050565b5f602082019050610c585f830184610c36565b92915050565b610c6781610b53565b82525050565b5f602082019050610c805f830184610c5e565b92915050565b5f82825260208201905092915050565b7f537465726f696420636f7374206d7573742062652067726561746572207468615f8201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b5f610cf0602683610c86565b9150610cfb82610c96565b604082019050919050565b5f6020820190508181035f830152610d1d81610ce4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d5b82610b53565b9150610d6683610b53565b9250828203905081811115610d7e57610d7d610d24565b5b92915050565b7f496e73756666696369656e7420636f6e74726163742062616c616e63650000005f82015250565b5f610db8601d83610c86565b9150610dc382610d84565b602082019050919050565b5f6020820190508181035f830152610de581610dac565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f610e20600f83610c86565b9150610e2b82610dec565b602082019050919050565b5f6020820190508181035f830152610e4d81610e14565b9050919050565b7f496e73756666696369656e742066756e647320666f7220537465726f6964204e5f8201527f4654000000000000000000000000000000000000000000000000000000000000602082015250565b5f610eae602283610c86565b9150610eb982610e54565b604082019050919050565b5f6020820190508181035f830152610edb81610ea2565b9050919050565b5f610eec82610b53565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f1e57610f1d610d24565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f6082610b53565b9150610f6b83610b53565b925082610f7b57610f7a610f29565b5b828204905092915050565b5f819050919050565b5f819050919050565b5f610fb2610fad610fa884610f86565b610f8f565b610b53565b9050919050565b610fc281610f98565b82525050565b5f602082019050610fdb5f830184610fb9565b92915050565b5f81905092915050565b50565b5f610ff95f83610fe1565b915061100482610feb565b5f82019050919050565b5f61101882610fee565b9150819050919050565b7f5472616e7366657220746f2077616c6c6574206661696c65642e0000000000005f82015250565b5f611056601a83610c86565b915061106182611022565b602082019050919050565b5f6020820190508181035f8301526110838161104a565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6110be601f83610c86565b91506110c98261108a565b602082019050919050565b5f6020820190508181035f8301526110eb816110b2565b905091905056fea26469706673582212209bec2334fd8be34c17fb212db14076b52aa2720f89bf382e230c31b5ebba687064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x29B04D60 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1420 CODESIZE SUB DUP1 PUSH3 0x1420 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3E SWAP2 SWAP1 PUSH3 0x279 JUMP JUMPDEST DUP2 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA9 SWAP2 SWAP1 PUSH3 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC3 DUP2 PUSH3 0x153 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2EA JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x243 DUP3 PUSH3 0x218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x255 DUP2 PUSH3 0x237 JUMP JUMPDEST DUP2 EQ PUSH3 0x260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x273 DUP2 PUSH3 0x24A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x292 JUMPI PUSH3 0x291 PUSH3 0x214 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2A1 DUP6 DUP3 DUP7 ADD PUSH3 0x263 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2B4 DUP6 DUP3 DUP7 ADD PUSH3 0x263 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C9 DUP2 PUSH3 0x237 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2E4 PUSH0 DUP4 ADD DUP5 PUSH3 0x2BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1128 DUP1 PUSH3 0x2F8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E9BAEC2 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0x933A4601 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x933A4601 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xD4714AAD EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xEFF0E29D EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30B JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x7E9BAEC2 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x8EA5220F EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x91274F68 EQ PUSH2 0x273 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x1F53AC02 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x1F53AC02 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x26190B47 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CD JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x902C67A EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xE0C7494 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0x129 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH2 0x3BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x58F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x6C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH2 0x8FB JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xBABBCF75B40721548C2B6C6845E36D4BD8EA000D56793FE6CE9CD99F7D4C0758 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x453 PUSH2 0x8FB JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A7 PUSH2 0x4A1 PUSH2 0x5B7 JUMP JUMPDEST DUP3 PUSH2 0x982 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B2 PUSH2 0x8FB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x517 SWAP1 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x597 PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x5A0 PUSH0 PUSH2 0xA2F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x60B PUSH2 0x8FB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP1 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6CA PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x706 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x75C SWAP1 PUSH2 0xEE2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x2 CALLVALUE PUSH2 0x76F SWAP2 SWAP1 PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 CALLVALUE PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AB PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x982 JUMP JUMPDEST PUSH2 0x7D6 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x982 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB66854451839EBC00F6F3F0510F064E36DBCBE3DA250CDC9B04FD218078B450D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x81D SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x82F PUSH2 0xB3F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87F PUSH2 0x8FB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F8 DUP2 PUSH2 0xA2F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x903 PUSH2 0xB48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x921 PUSH2 0x5B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x980 JUMPI PUSH2 0x944 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9A7 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB65 DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB6F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB80 DUP2 PUSH2 0xB5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9A PUSH2 0xB4F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBA8 DUP5 DUP3 DUP6 ADD PUSH2 0xB72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBDA DUP3 PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBEA DUP2 PUSH2 0xBD0 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC05 DUP2 PUSH2 0xBE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC20 JUMPI PUSH2 0xC1F PUSH2 0xB4F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC2D DUP5 DUP3 DUP6 ADD PUSH2 0xBF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC3F DUP2 PUSH2 0xBD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC58 PUSH0 DUP4 ADD DUP5 PUSH2 0xC36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC67 DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC80 PUSH0 DUP4 ADD DUP5 PUSH2 0xC5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537465726F696420636F7374206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCF0 PUSH1 0x26 DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xCFB DUP3 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD1D DUP2 PUSH2 0xCE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD5B DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP PUSH2 0xD66 DUP4 PUSH2 0xB53 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0xD24 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDB8 PUSH1 0x1D DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xDC3 DUP3 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDE5 DUP2 PUSH2 0xDAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE20 PUSH1 0xF DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP3 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE4D DUP2 PUSH2 0xE14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320666F7220537465726F6964204E PUSH0 DUP3 ADD MSTORE PUSH32 0x4654000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEAE PUSH1 0x22 DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB9 DUP3 PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEDB DUP2 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEEC DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xD24 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF60 DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP PUSH2 0xF6B DUP4 PUSH2 0xB53 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF7B JUMPI PUSH2 0xF7A PUSH2 0xF29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB2 PUSH2 0xFAD PUSH2 0xFA8 DUP5 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0xF8F JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0xF98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFDB PUSH0 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xFF9 PUSH0 DUP4 PUSH2 0xFE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1004 DUP3 PUSH2 0xFEB JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1018 DUP3 PUSH2 0xFEE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F2077616C6C6574206661696C65642E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1056 PUSH1 0x1A DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0x1061 DUP3 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1083 DUP2 PUSH2 0x104A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10BE PUSH1 0x1F DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0x10C9 DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10EB DUP2 PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xEC 0x23 CALLVALUE REVERT DUP12 0xE3 0x4C OR 0xFB 0x21 0x2D 0xB1 BLOCKHASH PUSH23 0xB52AA2720F89BF382E230C31B5EBBA687064736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "175:3550:3:-:0;;;459:9;430:38;;239:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;307:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:1;1821:7;:22;;;;359:10:3::2;347:9;;:22;;;;;;;;;;;;;;;;;;399:18;379:17;;:38;;;;;;;;;;;;;;;;;;239:185:::0;;175:3550;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;175:3550:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2299,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_224": {
									"entryPoint": 2888,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 2879,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2800,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_payTo_366": {
									"entryPoint": 2434,
									"id": 366,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2607,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buySteroid_343": {
									"entryPoint": 1730,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decreaseSteroidBalance_419": {
									"entryPoint": 958,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@devWallet_280": {
									"entryPoint": 1502,
									"id": 280,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getContractBalance_458": {
									"entryPoint": 1416,
									"id": 458,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSteroidBalance_379": {
									"entryPoint": 2097,
									"id": 379,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1463,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1423,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDevWallet_481": {
									"entryPoint": 1194,
									"id": 481,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStakingPoolWallet_504": {
									"entryPoint": 1539,
									"id": 504,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSteroidCost_403": {
									"entryPoint": 819,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingPoolWallet_282": {
									"entryPoint": 1379,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@steroidBalance_278": {
									"entryPoint": 1442,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@steroidCost_274": {
									"entryPoint": 1724,
									"id": 274,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2167,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawFunds_445": {
									"entryPoint": 1099,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack": {
									"entryPoint": 4025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 3974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint256": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3364,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b": {
									"entryPoint": 3668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f": {
									"entryPoint": 3222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 3564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11490:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:4",
														"type": ""
													}
												],
												"src": "545:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:4"
															},
															"nodeType": "YulIf",
															"src": "766:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:4",
														"type": ""
													}
												],
												"src": "690:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:4",
														"type": ""
													}
												],
												"src": "1025:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1194:7:4",
														"type": ""
													}
												],
												"src": "1157:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:43:4"
															},
															"nodeType": "YulIf",
															"src": "1312:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:4",
														"type": ""
													}
												],
												"src": "1259:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1417:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1433:5:4",
														"type": ""
													}
												],
												"src": "1387:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1598:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:32:4"
															},
															"nodeType": "YulIf",
															"src": "1608:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1737:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1781:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1568:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1579:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1591:6:4",
														"type": ""
													}
												],
												"src": "1532:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1972:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1954:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1954:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1942:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1920:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1927:3:4",
														"type": ""
													}
												],
												"src": "1867:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2061:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2073:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2084:4:4",
														"type": ""
													}
												],
												"src": "1991:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2272:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2279:3:4",
														"type": ""
													}
												],
												"src": "2219:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2441:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2451:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2474:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2451:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2555:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2540:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2487:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2487:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2413:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2425:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2436:4:4",
														"type": ""
													}
												],
												"src": "2343:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2667:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2684:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2689:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2677:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2705:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2729:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2705:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2639:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2644:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2655:11:4",
														"type": ""
													}
												],
												"src": "2571:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2852:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2874:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2882:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2870:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2870:14:4"
																	},
																	{
																		"hexValue": "537465726f696420636f7374206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2886:34:4",
																		"type": "",
																		"value": "Steroid cost must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2863:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2863:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2863:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2942:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2950:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2938:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2938:15:4"
																	},
																	{
																		"hexValue": "6e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2955:8:4",
																		"type": "",
																		"value": "n zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2931:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2844:6:4",
														"type": ""
													}
												],
												"src": "2746:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3199:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3204:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3140:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3133:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3305:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f",
																	"nodeType": "YulIdentifier",
																	"src": "3216:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3216:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3318:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3329:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3334:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3325:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3325:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3318:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3111:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3119:3:4",
														"type": ""
													}
												],
												"src": "2977:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3520:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3530:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3542:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3553:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3538:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3530:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3577:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3588:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3573:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3573:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3596:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3602:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3592:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3592:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3566:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3566:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3566:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3622:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3756:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3630:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3630:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3622:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3500:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3515:4:4",
														"type": ""
													}
												],
												"src": "3349:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3802:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3819:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3822:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3812:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3812:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3812:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3916:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3919:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3909:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3909:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3943:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3933:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3933:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3933:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3774:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4015:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4038:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4020:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4015:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4049:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4072:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4054:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4049:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4083:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4095:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4098:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4091:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4083:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4125:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4127:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4127:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4127:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4116:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4122:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4113:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:11:4"
															},
															"nodeType": "YulIf",
															"src": "4110:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3991:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3994:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4000:4:4",
														"type": ""
													}
												],
												"src": "3960:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4266:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4288:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4296:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:14:4"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4300:31:4",
																		"type": "",
																		"value": "Insufficient contract balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:55:4"
														}
													]
												},
												"name": "store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4258:6:4",
														"type": ""
													}
												],
												"src": "4160:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4491:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4501:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4567:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4572:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4508:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4508:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4501:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4673:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																	"nodeType": "YulIdentifier",
																	"src": "4584:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4584:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4686:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4697:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4702:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4693:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4693:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4686:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4479:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4487:3:4",
														"type": ""
													}
												],
												"src": "4345:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4888:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4898:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4910:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4921:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4898:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4945:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4956:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4941:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4941:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4964:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4970:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4960:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4960:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4934:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4934:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4990:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5124:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4998:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4998:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4990:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4868:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4883:4:4",
														"type": ""
													}
												],
												"src": "4717:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5248:59:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5270:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5278:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5266:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5266:14:4"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5282:17:4",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5259:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5259:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5259:41:4"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5240:6:4",
														"type": ""
													}
												],
												"src": "5142:165:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5459:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5469:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5535:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5540:2:4",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5476:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5641:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nodeType": "YulIdentifier",
																	"src": "5552:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5552:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5552:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5654:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5665:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5670:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5661:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5661:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5654:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5447:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5455:3:4",
														"type": ""
													}
												],
												"src": "5313:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5856:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5866:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5878:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5889:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5874:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5874:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5866:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5913:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5924:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5909:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5909:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5932:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5938:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5928:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5928:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5902:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5902:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5902:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5958:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6092:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5966:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5966:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5958:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5836:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5851:4:4",
														"type": ""
													}
												],
												"src": "5685:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6216:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6238:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6246:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6234:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6234:14:4"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320666f7220537465726f6964204e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6250:34:4",
																		"type": "",
																		"value": "Insufficient funds for Steroid N"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6227:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6227:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6306:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6314:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6302:15:4"
																	},
																	{
																		"hexValue": "4654",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6319:4:4",
																		"type": "",
																		"value": "FT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6295:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6295:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6208:6:4",
														"type": ""
													}
												],
												"src": "6110:221:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6483:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6493:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6559:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6500:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6500:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6493:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6665:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b",
																	"nodeType": "YulIdentifier",
																	"src": "6576:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6576:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6576:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6678:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6689:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6694:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6685:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6685:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6678:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6471:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6479:3:4",
														"type": ""
													}
												],
												"src": "6337:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6880:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6890:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6902:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6913:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6898:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6898:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6890:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6937:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6948:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6933:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6933:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6956:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6962:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6952:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6952:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6926:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6926:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6926:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6982:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7116:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6990:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6990:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6982:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6860:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6875:4:4",
														"type": ""
													}
												],
												"src": "6709:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7177:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7187:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7214:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7196:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7196:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7187:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7310:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7312:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7312:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7312:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7235:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7242:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7232:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7232:77:4"
															},
															"nodeType": "YulIf",
															"src": "7229:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7341:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7352:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7359:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7348:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7341:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7163:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7173:3:4",
														"type": ""
													}
												],
												"src": "7134:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7401:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7418:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7421:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7411:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7411:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7411:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7518:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7508:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7508:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7539:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7542:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7532:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7532:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7532:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7373:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7601:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7611:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7634:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7616:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7611:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7645:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7668:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7650:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7650:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7645:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7692:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7694:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7694:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7694:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7689:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7682:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7682:9:4"
															},
															"nodeType": "YulIf",
															"src": "7679:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7724:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7733:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7736:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7729:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7729:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7724:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7590:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7593:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7599:1:4",
														"type": ""
													}
												],
												"src": "7559:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7803:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7813:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7824:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7813:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7785:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7795:7:4",
														"type": ""
													}
												],
												"src": "7750:85:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7873:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7883:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7890:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7883:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7859:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7869:3:4",
														"type": ""
													}
												],
												"src": "7841:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7975:90:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7985:74:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8051:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "8025:25:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8025:32:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "8016:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8016:42:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7998:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7998:61:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7985:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7955:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7965:9:4",
														"type": ""
													}
												],
												"src": "7907:158:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8144:74:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8161:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8205:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8166:38:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8166:45:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8154:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8154:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8154:58:4"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8132:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8139:3:4",
														"type": ""
													}
												],
												"src": "8071:147:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8330:132:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8340:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8352:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8363:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8348:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8348:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8340:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8428:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8441:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8452:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8437:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8437:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8376:51:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8376:79:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8376:79:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8302:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8314:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8325:4:4",
														"type": ""
													}
												],
												"src": "8224:238:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8581:34:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8591:18:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8606:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8591:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8553:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8558:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8569:11:4",
														"type": ""
													}
												],
												"src": "8468:147:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8727:8:4",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8719:6:4",
														"type": ""
													}
												],
												"src": "8621:114:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8904:235:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8914:90:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8997:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9002:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8921:75:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8921:83:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8914:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9102:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "9013:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9013:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9013:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9115:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9126:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9131:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9122:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9122:11:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9115:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8892:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8900:3:4",
														"type": ""
													}
												],
												"src": "8741:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9333:191:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9344:154:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9494:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9351:141:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9351:147:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9344:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9508:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9515:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9508:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9320:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9329:3:4",
														"type": ""
													}
												],
												"src": "9145:379:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9636:70:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9658:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9666:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9654:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9654:14:4"
																	},
																	{
																		"hexValue": "5472616e7366657220746f2077616c6c6574206661696c65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9670:28:4",
																		"type": "",
																		"value": "Transfer to wallet failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9647:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9647:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9647:52:4"
														}
													]
												},
												"name": "store_literal_in_memory_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9628:6:4",
														"type": ""
													}
												],
												"src": "9530:176:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9858:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9868:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9934:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9939:2:4",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9875:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9875:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9868:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10040:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13",
																	"nodeType": "YulIdentifier",
																	"src": "9951:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9951:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10053:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10064:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10069:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10060:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10060:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10053:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9846:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9854:3:4",
														"type": ""
													}
												],
												"src": "9712:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10255:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10265:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10277:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10273:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10273:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10265:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10312:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10323:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10308:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10308:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10331:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10337:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10327:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10327:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10301:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10301:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10301:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10357:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10491:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10365:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10365:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10357:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10235:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10250:4:4",
														"type": ""
													}
												],
												"src": "10084:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10615:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10637:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10645:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10633:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10633:14:4"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10649:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10626:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10626:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10626:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10607:6:4",
														"type": ""
													}
												],
												"src": "10509:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10842:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10852:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10918:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10923:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10859:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10859:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10852:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11024:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "10935:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10935:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10935:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11037:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11048:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11053:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11044:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11044:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11037:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10830:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10838:3:4",
														"type": ""
													}
												],
												"src": "10696:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11239:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11249:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11261:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11272:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11257:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11257:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11249:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11296:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11307:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11292:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11292:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11315:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11321:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11311:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11311:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11285:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11285:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11285:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11341:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11475:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11349:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11349:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11341:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11219:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11234:4:4",
														"type": ""
													}
												],
												"src": "11068:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Steroid cost must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient contract balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds for Steroid N\")\n\n        mstore(add(memPtr, 32), \"FT\")\n\n    }\n\n    function abi_encode_t_stringliteral_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer to wallet failed.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e7575f3560e01c80637e9baec211610089578063933a460111610058578063933a46011461029b578063d4714aad146102c5578063eff0e29d146102cf578063f2fde38b1461030b576100e7565b80637e9baec2146101e35780638da5cb5b1461021f5780638ea5220f1461024957806391274f6814610273576100e7565b80631f53ac02116100c55780631f53ac021461015157806326190b47146101795780636f9fb98a146101a3578063715018a6146101cd576100e7565b80630902c67a146100eb5780630e0c749414610113578063155dd5ee14610129575b5f80fd5b3480156100f6575f80fd5b50610111600480360381019061010c9190610b86565b610333565b005b34801561011e575f80fd5b506101276103be565b005b348015610134575f80fd5b5061014f600480360381019061014a9190610b86565b61044b565b005b34801561015c575f80fd5b5061017760048036038101906101729190610c0b565b6104aa565b005b348015610184575f80fd5b5061018d610563565b60405161019a9190610c45565b60405180910390f35b3480156101ae575f80fd5b506101b7610588565b6040516101c49190610c6d565b60405180910390f35b3480156101d8575f80fd5b506101e161058f565b005b3480156101ee575f80fd5b5061020960048036038101906102049190610c0b565b6105a2565b6040516102169190610c6d565b60405180910390f35b34801561022a575f80fd5b506102336105b7565b6040516102409190610c45565b60405180910390f35b348015610254575f80fd5b5061025d6105de565b60405161026a9190610c45565b60405180910390f35b34801561027e575f80fd5b5061029960048036038101906102949190610c0b565b610603565b005b3480156102a6575f80fd5b506102af6106bc565b6040516102bc9190610c6d565b60405180910390f35b6102cd6106c2565b005b3480156102da575f80fd5b506102f560048036038101906102f09190610c0b565b610831565b6040516103029190610c6d565b60405180910390f35b348015610316575f80fd5b50610331600480360381019061032c9190610c0b565b610877565b005b61033b6108fb565b5f811161037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037490610d06565b60405180910390fd5b806002819055507fbabbcf75b40721548c2b6c6845e36d4bd8ea000d56793fe6ce9cd99f7d4c0758816040516103b39190610c6d565b60405180910390a150565b600160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546104089190610d51565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550565b6104536108fb565b47811115610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90610dce565b60405180910390fd5b6104a76104a16105b7565b82610982565b50565b6104b26108fb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051790610e36565b60405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f47905090565b6105976108fb565b6105a05f610a2f565b565b6003602052805f5260405f205f915090505481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61060b6108fb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610679576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067090610e36565b60405180910390fd5b8060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025481565b6106ca610af0565b60025434101561070f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070690610ec4565b60405180910390fd5b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061075c90610ee2565b91905055505f60023461076f9190610f56565b90505f813461077e9190610d51565b90506107ab60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610982565b6107d660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610982565b3373ffffffffffffffffffffffffffffffffffffffff167fb66854451839ebc00f6f3f0510f064e36dbcbe3da250cdc9b04fd218078b450d600160405161081d9190610fc8565b60405180910390a2505061082f610b3f565b565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61087f6108fb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108ef575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108e69190610c45565b60405180910390fd5b6108f881610a2f565b50565b610903610b48565b73ffffffffffffffffffffffffffffffffffffffff166109216105b7565b73ffffffffffffffffffffffffffffffffffffffff161461098057610944610b48565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109779190610c45565b60405180910390fd5b565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040516109a79061100e565b5f6040518083038185875af1925050503d805f81146109e1576040519150601f19603f3d011682016040523d82523d5f602084013e6109e6565b606091505b5050905080610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a219061106c565b60405180910390fd5b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610b35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2c906110d4565b60405180910390fd5b6002600181905550565b60018081905550565b5f33905090565b5f80fd5b5f819050919050565b610b6581610b53565b8114610b6f575f80fd5b50565b5f81359050610b8081610b5c565b92915050565b5f60208284031215610b9b57610b9a610b4f565b5b5f610ba884828501610b72565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610bda82610bb1565b9050919050565b610bea81610bd0565b8114610bf4575f80fd5b50565b5f81359050610c0581610be1565b92915050565b5f60208284031215610c2057610c1f610b4f565b5b5f610c2d84828501610bf7565b91505092915050565b610c3f81610bd0565b82525050565b5f602082019050610c585f830184610c36565b92915050565b610c6781610b53565b82525050565b5f602082019050610c805f830184610c5e565b92915050565b5f82825260208201905092915050565b7f537465726f696420636f7374206d7573742062652067726561746572207468615f8201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b5f610cf0602683610c86565b9150610cfb82610c96565b604082019050919050565b5f6020820190508181035f830152610d1d81610ce4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d5b82610b53565b9150610d6683610b53565b9250828203905081811115610d7e57610d7d610d24565b5b92915050565b7f496e73756666696369656e7420636f6e74726163742062616c616e63650000005f82015250565b5f610db8601d83610c86565b9150610dc382610d84565b602082019050919050565b5f6020820190508181035f830152610de581610dac565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f610e20600f83610c86565b9150610e2b82610dec565b602082019050919050565b5f6020820190508181035f830152610e4d81610e14565b9050919050565b7f496e73756666696369656e742066756e647320666f7220537465726f6964204e5f8201527f4654000000000000000000000000000000000000000000000000000000000000602082015250565b5f610eae602283610c86565b9150610eb982610e54565b604082019050919050565b5f6020820190508181035f830152610edb81610ea2565b9050919050565b5f610eec82610b53565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f1e57610f1d610d24565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f6082610b53565b9150610f6b83610b53565b925082610f7b57610f7a610f29565b5b828204905092915050565b5f819050919050565b5f819050919050565b5f610fb2610fad610fa884610f86565b610f8f565b610b53565b9050919050565b610fc281610f98565b82525050565b5f602082019050610fdb5f830184610fb9565b92915050565b5f81905092915050565b50565b5f610ff95f83610fe1565b915061100482610feb565b5f82019050919050565b5f61101882610fee565b9150819050919050565b7f5472616e7366657220746f2077616c6c6574206661696c65642e0000000000005f82015250565b5f611056601a83610c86565b915061106182611022565b602082019050919050565b5f6020820190508181035f8301526110838161104a565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6110be601f83610c86565b91506110c98261108a565b602082019050919050565b5f6020820190508181035f8301526110eb816110b2565b905091905056fea26469706673582212209bec2334fd8be34c17fb212db14076b52aa2720f89bf382e230c31b5ebba687064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E9BAEC2 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0x933A4601 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x933A4601 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xD4714AAD EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xEFF0E29D EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30B JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x7E9BAEC2 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x8EA5220F EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x91274F68 EQ PUSH2 0x273 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x1F53AC02 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x1F53AC02 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x26190B47 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CD JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x902C67A EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xE0C7494 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0x129 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH2 0x3BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x58F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x6C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH2 0x8FB JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xBABBCF75B40721548C2B6C6845E36D4BD8EA000D56793FE6CE9CD99F7D4C0758 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x453 PUSH2 0x8FB JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0xDCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A7 PUSH2 0x4A1 PUSH2 0x5B7 JUMP JUMPDEST DUP3 PUSH2 0x982 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B2 PUSH2 0x8FB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x520 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x517 SWAP1 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x597 PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x5A0 PUSH0 PUSH2 0xA2F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x60B PUSH2 0x8FB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP1 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6CA PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x706 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x75C SWAP1 PUSH2 0xEE2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x2 CALLVALUE PUSH2 0x76F SWAP2 SWAP1 PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 CALLVALUE PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AB PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x982 JUMP JUMPDEST PUSH2 0x7D6 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x982 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB66854451839EBC00F6F3F0510F064E36DBCBE3DA250CDC9B04FD218078B450D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x81D SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x82F PUSH2 0xB3F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87F PUSH2 0x8FB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F8 DUP2 PUSH2 0xA2F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x903 PUSH2 0xB48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x921 PUSH2 0x5B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x980 JUMPI PUSH2 0x944 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9A7 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB65 DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB6F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB80 DUP2 PUSH2 0xB5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9A PUSH2 0xB4F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBA8 DUP5 DUP3 DUP6 ADD PUSH2 0xB72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBDA DUP3 PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBEA DUP2 PUSH2 0xBD0 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC05 DUP2 PUSH2 0xBE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC20 JUMPI PUSH2 0xC1F PUSH2 0xB4F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC2D DUP5 DUP3 DUP6 ADD PUSH2 0xBF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC3F DUP2 PUSH2 0xBD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC58 PUSH0 DUP4 ADD DUP5 PUSH2 0xC36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC67 DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC80 PUSH0 DUP4 ADD DUP5 PUSH2 0xC5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537465726F696420636F7374206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCF0 PUSH1 0x26 DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xCFB DUP3 PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD1D DUP2 PUSH2 0xCE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD5B DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP PUSH2 0xD66 DUP4 PUSH2 0xB53 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0xD24 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDB8 PUSH1 0x1D DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xDC3 DUP3 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDE5 DUP2 PUSH2 0xDAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE20 PUSH1 0xF DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP3 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE4D DUP2 PUSH2 0xE14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320666F7220537465726F6964204E PUSH0 DUP3 ADD MSTORE PUSH32 0x4654000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEAE PUSH1 0x22 DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB9 DUP3 PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEDB DUP2 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEEC DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xF1E JUMPI PUSH2 0xF1D PUSH2 0xD24 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF60 DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP PUSH2 0xF6B DUP4 PUSH2 0xB53 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF7B JUMPI PUSH2 0xF7A PUSH2 0xF29 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB2 PUSH2 0xFAD PUSH2 0xFA8 DUP5 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0xF8F JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0xF98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFDB PUSH0 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xFF9 PUSH0 DUP4 PUSH2 0xFE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1004 DUP3 PUSH2 0xFEB JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1018 DUP3 PUSH2 0xFEE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F2077616C6C6574206661696C65642E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1056 PUSH1 0x1A DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0x1061 DUP3 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1083 DUP2 PUSH2 0x104A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10BE PUSH1 0x1F DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP PUSH2 0x10C9 DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10EB DUP2 PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xEC 0x23 CALLVALUE REVERT DUP12 0xE3 0x4C OR 0xFB 0x21 0x2D 0xB1 BLOCKHASH PUSH23 0xB52AA2720F89BF382E230C31B5EBBA687064736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "175:3550:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2194:212;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2407:109;;;;;;;;;;;;;:::i;:::-;;2648:181;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3184:168;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;596:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2940:107;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;510:49:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;566:24:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3515:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;430:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;939:486;;;:::i;:::-;;1929:117;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2194:212:3;1531:13:0;:11;:13::i;:::-;2282:1:3::1;2272:7;:11;2264:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2350:7;2336:11;:21;;;;2372:27;2391:7;2372:27;;;;;;:::i;:::-;;;;;;;;2194:212:::0;:::o;2407:109::-;2512:1;2483:14;:26;2498:10;2483:26;;;;;;;;;;;;;;;;:30;;;;:::i;:::-;2454:14;:26;2469:10;2454:26;;;;;;;;;;;;;;;:59;;;;2407:109::o;2648:181::-;1531:13:0;:11;:13::i;:::-;2734:21:3::1;2724:6;:31;;2716:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2799:23;2806:7;:5;:7::i;:::-;2815:6;2799;:23::i;:::-;2648:181:::0;:::o;3184:168::-;1531:13:0;:11;:13::i;:::-;3289:1:3::1;3265:26;;:12;:26;;::::0;3257:54:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3333:12;3321:9;;:24;;;;;;;;;;;;;;;;;;3184:168:::0;:::o;596:32::-;;;;;;;;;;;;;:::o;2940:107::-;2993:7;3019:21;3012:28;;2940:107;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;510:49:3:-;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;566:24:3:-;;;;;;;;;;;;;:::o;3515:208::-;1531:13:0;:11;:13::i;:::-;3644:1:3::1;3612:34;;:20;:34;;::::0;3604:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3696:20;3676:17;;:40;;;;;;;;;;;;;;;;;;3515:208:::0;:::o;430:38::-;;;;:::o;939:486::-;2261:21:1;:19;:21::i;:::-;1022:11:3::1;;1009:9;:24;;1001:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1083:14;:26;1098:10;1083:26;;;;;;;;;;;;;;;;:28;;;;;;;;;:::i;:::-;;;;;;1199:16;1230:1;1218:9;:13;;;;:::i;:::-;1199:32;;1241:20;1276:8;1264:9;:20;;;;:::i;:::-;1241:43;;1295:27;1302:9;;;;;;;;;;;1313:8;1295:6;:27::i;:::-;1332:39;1339:17;;;;;;;;;;;1358:12;1332:6;:39::i;:::-;1404:10;1387:31;;;1416:1;1387:31;;;;;;:::i;:::-;;;;;;;;991:434;;2303:20:1::0;:18;:20::i;:::-;939:486:3:o;1929:117::-;1993:7;2019:14;:20;2034:4;2019:20;;;;;;;;;;;;;;;;2012:27;;1929:117;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1596:171:3:-;1660:12;1678:2;:7;;1693:6;1678:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1659:45;;;1722:7;1714:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1649:118;1596:171;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:169::-;2655:11;2689:6;2684:3;2677:19;2729:4;2724:3;2720:14;2705:29;;2571:169;;;;:::o;2746:225::-;2886:34;2882:1;2874:6;2870:14;2863:58;2955:8;2950:2;2942:6;2938:15;2931:33;2746:225;:::o;2977:366::-;3119:3;3140:67;3204:2;3199:3;3140:67;:::i;:::-;3133:74;;3216:93;3305:3;3216:93;:::i;:::-;3334:2;3329:3;3325:12;3318:19;;2977:366;;;:::o;3349:419::-;3515:4;3553:2;3542:9;3538:18;3530:26;;3602:9;3596:4;3592:20;3588:1;3577:9;3573:17;3566:47;3630:131;3756:4;3630:131;:::i;:::-;3622:139;;3349:419;;;:::o;3774:180::-;3822:77;3819:1;3812:88;3919:4;3916:1;3909:15;3943:4;3940:1;3933:15;3960:194;4000:4;4020:20;4038:1;4020:20;:::i;:::-;4015:25;;4054:20;4072:1;4054:20;:::i;:::-;4049:25;;4098:1;4095;4091:9;4083:17;;4122:1;4116:4;4113:11;4110:37;;;4127:18;;:::i;:::-;4110:37;3960:194;;;;:::o;4160:179::-;4300:31;4296:1;4288:6;4284:14;4277:55;4160:179;:::o;4345:366::-;4487:3;4508:67;4572:2;4567:3;4508:67;:::i;:::-;4501:74;;4584:93;4673:3;4584:93;:::i;:::-;4702:2;4697:3;4693:12;4686:19;;4345:366;;;:::o;4717:419::-;4883:4;4921:2;4910:9;4906:18;4898:26;;4970:9;4964:4;4960:20;4956:1;4945:9;4941:17;4934:47;4998:131;5124:4;4998:131;:::i;:::-;4990:139;;4717:419;;;:::o;5142:165::-;5282:17;5278:1;5270:6;5266:14;5259:41;5142:165;:::o;5313:366::-;5455:3;5476:67;5540:2;5535:3;5476:67;:::i;:::-;5469:74;;5552:93;5641:3;5552:93;:::i;:::-;5670:2;5665:3;5661:12;5654:19;;5313:366;;;:::o;5685:419::-;5851:4;5889:2;5878:9;5874:18;5866:26;;5938:9;5932:4;5928:20;5924:1;5913:9;5909:17;5902:47;5966:131;6092:4;5966:131;:::i;:::-;5958:139;;5685:419;;;:::o;6110:221::-;6250:34;6246:1;6238:6;6234:14;6227:58;6319:4;6314:2;6306:6;6302:15;6295:29;6110:221;:::o;6337:366::-;6479:3;6500:67;6564:2;6559:3;6500:67;:::i;:::-;6493:74;;6576:93;6665:3;6576:93;:::i;:::-;6694:2;6689:3;6685:12;6678:19;;6337:366;;;:::o;6709:419::-;6875:4;6913:2;6902:9;6898:18;6890:26;;6962:9;6956:4;6952:20;6948:1;6937:9;6933:17;6926:47;6990:131;7116:4;6990:131;:::i;:::-;6982:139;;6709:419;;;:::o;7134:233::-;7173:3;7196:24;7214:5;7196:24;:::i;:::-;7187:33;;7242:66;7235:5;7232:77;7229:103;;7312:18;;:::i;:::-;7229:103;7359:1;7352:5;7348:13;7341:20;;7134:233;;;:::o;7373:180::-;7421:77;7418:1;7411:88;7518:4;7515:1;7508:15;7542:4;7539:1;7532:15;7559:185;7599:1;7616:20;7634:1;7616:20;:::i;:::-;7611:25;;7650:20;7668:1;7650:20;:::i;:::-;7645:25;;7689:1;7679:35;;7694:18;;:::i;:::-;7679:35;7736:1;7733;7729:9;7724:14;;7559:185;;;;:::o;7750:85::-;7795:7;7824:5;7813:16;;7750:85;;;:::o;7841:60::-;7869:3;7890:5;7883:12;;7841:60;;;:::o;7907:158::-;7965:9;7998:61;8016:42;8025:32;8051:5;8025:32;:::i;:::-;8016:42;:::i;:::-;7998:61;:::i;:::-;7985:74;;7907:158;;;:::o;8071:147::-;8166:45;8205:5;8166:45;:::i;:::-;8161:3;8154:58;8071:147;;:::o;8224:238::-;8325:4;8363:2;8352:9;8348:18;8340:26;;8376:79;8452:1;8441:9;8437:17;8428:6;8376:79;:::i;:::-;8224:238;;;;:::o;8468:147::-;8569:11;8606:3;8591:18;;8468:147;;;;:::o;8621:114::-;;:::o;8741:398::-;8900:3;8921:83;9002:1;8997:3;8921:83;:::i;:::-;8914:90;;9013:93;9102:3;9013:93;:::i;:::-;9131:1;9126:3;9122:11;9115:18;;8741:398;;;:::o;9145:379::-;9329:3;9351:147;9494:3;9351:147;:::i;:::-;9344:154;;9515:3;9508:10;;9145:379;;;:::o;9530:176::-;9670:28;9666:1;9658:6;9654:14;9647:52;9530:176;:::o;9712:366::-;9854:3;9875:67;9939:2;9934:3;9875:67;:::i;:::-;9868:74;;9951:93;10040:3;9951:93;:::i;:::-;10069:2;10064:3;10060:12;10053:19;;9712:366;;;:::o;10084:419::-;10250:4;10288:2;10277:9;10273:18;10265:26;;10337:9;10331:4;10327:20;10323:1;10312:9;10308:17;10301:47;10365:131;10491:4;10365:131;:::i;:::-;10357:139;;10084:419;;;:::o;10509:181::-;10649:33;10645:1;10637:6;10633:14;10626:57;10509:181;:::o;10696:366::-;10838:3;10859:67;10923:2;10918:3;10859:67;:::i;:::-;10852:74;;10935:93;11024:3;10935:93;:::i;:::-;11053:2;11048:3;11044:12;11037:19;;10696:366;;;:::o;11068:419::-;11234:4;11272:2;11261:9;11257:18;11249:26;;11321:9;11315:4;11311:20;11307:1;11296:9;11292:17;11285:47;11349:131;11475:4;11349:131;:::i;:::-;11341:139;;11068:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "878400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buySteroid()": "infinite",
								"decreaseSteroidBalance()": "infinite",
								"devWallet()": "2575",
								"getContractBalance()": "401",
								"getSteroidBalance(address)": "2895",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"setDevWallet(address)": "infinite",
								"setStakingPoolWallet(address)": "infinite",
								"setSteroidCost(uint256)": "infinite",
								"stakingPoolWallet()": "2553",
								"steroidBalance(address)": "2825",
								"steroidCost()": "2447",
								"transferOwnership(address)": "infinite",
								"withdrawFunds(uint256)": "infinite"
							},
							"internal": {
								"_payTo(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 3725,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 459,
									"end": 468,
									"name": "PUSH",
									"source": 3,
									"value": "29B04D60"
								},
								{
									"begin": 430,
									"end": 468,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 430,
									"end": 468,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 239,
									"end": 424,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 424,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 239,
									"end": 424,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 239,
									"end": 424,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 239,
									"end": 424,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 239,
									"end": 424,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 239,
									"end": 424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 239,
									"end": 424,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 307,
									"end": 317,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 359,
									"end": 369,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 347,
									"end": 356,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 347,
									"end": 356,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 347,
									"end": 369,
									"modifierDepth": 2,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 399,
									"end": 417,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 379,
									"end": 396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 379,
									"end": 396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 379,
									"end": 417,
									"modifierDepth": 2,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 239,
									"end": 424,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 3725,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bec2334fd8be34c17fb212db14076b52aa2720f89bf382e230c31b5ebba687064736f6c63430008140033",
									".code": [
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "7E9BAEC2"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "933A4601"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "933A4601"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "D4714AAD"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "EFF0E29D"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "7E9BAEC2"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "8EA5220F"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "91274F68"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "1F53AC02"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "1F53AC02"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "26190B47"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "6F9FB98A"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "902C67A"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "E0C7494"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "155DD5EE"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 3725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2194,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2194,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2407,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2648,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2648,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3184,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3184,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 596,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 596,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2940,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2940,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 559,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 510,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 510,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 510,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 566,
											"end": 590,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 566,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 566,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3515,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3515,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 430,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 430,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1425,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 939,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 939,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 939,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1425,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 939,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1425,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1929,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1929,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1929,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2282,
											"end": 2283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2283,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2264,
											"end": 2326,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2264,
											"end": 2326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2357,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2336,
											"end": 2357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "BABBCF75B40721548C2B6C6845E36D4BD8EA000D56793FE6CE9CD99F7D4C0758"
										},
										{
											"begin": 2391,
											"end": 2398,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2372,
											"end": 2399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2399,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2194,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2407,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2513,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2483,
											"end": 2497,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2508,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2509,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2483,
											"end": 2513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2483,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2513,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2483,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2468,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2479,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2480,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2513,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2755,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2755,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2755,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2716,
											"end": 2789,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2716,
											"end": 2789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2806,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2806,
											"end": 2811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2806,
											"end": 2813,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 2813,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2806,
											"end": 2813,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2821,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2799,
											"end": 2822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2799,
											"end": 2822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3289,
											"end": 3290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3265,
											"end": 3291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3265,
											"end": 3291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3291,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3257,
											"end": 3311,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3257,
											"end": 3311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3321,
											"end": 3330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 596,
											"end": 628,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 596,
											"end": 628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3040,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3012,
											"end": 3040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3012,
											"end": 3040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 3047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 559,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 510,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 590,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 566,
											"end": 590,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 566,
											"end": 590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3612,
											"end": 3646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3612,
											"end": 3646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3646,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3604,
											"end": 3666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3604,
											"end": 3666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3716,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3676,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3716,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 430,
											"end": 468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1425,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 939,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1022,
											"end": 1033,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1018,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1033,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1033,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1001,
											"end": 1072,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1001,
											"end": 1072,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1108,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1083,
											"end": 1111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1111,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1199,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1218,
											"end": 1227,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1218,
											"end": 1231,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1218,
											"end": 1231,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1218,
											"end": 1231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1199,
											"end": 1231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1199,
											"end": 1231,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1273,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1264,
											"end": 1284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1295,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1311,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1313,
											"end": 1321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1295,
											"end": 1301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1295,
											"end": 1322,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1295,
											"end": 1322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1295,
											"end": 1322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1370,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1338,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1332,
											"end": 1371,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1332,
											"end": 1371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1414,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "B66854451839EBC00F6F3F0510F064E36DBCBE3DA250CDC9B04FD218078B450D"
										},
										{
											"begin": 1416,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1387,
											"end": 1418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1418,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1425,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1425,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1993,
											"end": 2000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2033,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2038,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1767,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1596,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1685,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1678,
											"end": 1685,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1678,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1704,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1704,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1729,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1714,
											"end": 1760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1714,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1649,
											"end": 1767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1646,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1791,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1954,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2135,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2306,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2459,
											"end": 2477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2487,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2343,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2696,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2971,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2746,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "537465726F696420636F7374206D757374206265206772656174657220746861"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2870,
											"end": 2884,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2863,
											"end": 2921,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2963,
											"name": "PUSH",
											"source": 4,
											"value": "6E207A65726F0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2950,
											"end": 2952,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2964,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3343,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2977,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 3204,
											"end": 3206,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3199,
											"end": 3202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3140,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3207,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 3140,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 3305,
											"end": 3308,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3216,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3309,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 3216,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3336,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3337,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3349,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3530,
											"end": 3556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3530,
											"end": 3556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3611,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3612,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3589,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3573,
											"end": 3590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3613,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3756,
											"end": 3760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3630,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3761,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3630,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3774,
											"end": 3954,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3774,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3819,
											"end": 3820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3919,
											"end": 3923,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3909,
											"end": 3924,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 3947,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3940,
											"end": 3941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3948,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 4154,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3960,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 4038,
											"end": 4039,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4020,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 4020,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4015,
											"end": 4040,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4015,
											"end": 4040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 4072,
											"end": 4073,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4054,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4074,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 4054,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4099,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4100,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4116,
											"end": 4120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4124,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4147,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4110,
											"end": 4147,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4127,
											"end": 4145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4147,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4110,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 4154,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 4154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 4154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 4154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 4154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4160,
											"end": 4339,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4160,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4300,
											"end": 4331,
											"name": "PUSH",
											"source": 4,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E6365000000"
										},
										{
											"begin": 4296,
											"end": 4297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4294,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4160,
											"end": 4339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4160,
											"end": 4339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4711,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4345,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 4572,
											"end": 4574,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 4567,
											"end": 4570,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4508,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4575,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 4508,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4501,
											"end": 4575,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4501,
											"end": 4575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 4673,
											"end": 4676,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4584,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4677,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 4584,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4702,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4697,
											"end": 4700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4923,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 4919,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4970,
											"end": 4979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 4980,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4956,
											"end": 4957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4945,
											"end": 4954,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4958,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4981,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 5124,
											"end": 5128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4998,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5129,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 4998,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 5136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5307,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5142,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5299,
											"name": "PUSH",
											"source": 4,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5313,
											"end": 5679,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5313,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5455,
											"end": 5458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 5540,
											"end": 5542,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 5535,
											"end": 5538,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5476,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5543,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 5476,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5641,
											"end": 5644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5552,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5645,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5552,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5668,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5661,
											"end": 5673,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5313,
											"end": 5679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5313,
											"end": 5679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5313,
											"end": 5679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5313,
											"end": 5679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5685,
											"end": 6104,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5685,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5851,
											"end": 5855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5889,
											"end": 5891,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5878,
											"end": 5887,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5892,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5892,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 5947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5928,
											"end": 5948,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 5925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5922,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 5926,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5949,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 6092,
											"end": 6096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5966,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6097,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 5966,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5958,
											"end": 6097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5958,
											"end": 6097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5685,
											"end": 6104,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5685,
											"end": 6104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5685,
											"end": 6104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5685,
											"end": 6104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6110,
											"end": 6331,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6110,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6250,
											"end": 6284,
											"name": "PUSH",
											"source": 4,
											"value": "496E73756666696369656E742066756E647320666F7220537465726F6964204E"
										},
										{
											"begin": 6246,
											"end": 6247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 6244,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6234,
											"end": 6248,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6285,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6323,
											"name": "PUSH",
											"source": 4,
											"value": "4654000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6314,
											"end": 6316,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6306,
											"end": 6312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6317,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6324,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6110,
											"end": 6331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6110,
											"end": 6331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6703,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6337,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6500,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6559,
											"end": 6562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6500,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6500,
											"end": 6567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6500,
											"end": 6567,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6500,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6567,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6567,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6576,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 6665,
											"end": 6668,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6576,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6576,
											"end": 6669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6576,
											"end": 6669,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 6576,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6694,
											"end": 6696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6689,
											"end": 6692,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6678,
											"end": 6697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6678,
											"end": 6697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6703,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6703,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6709,
											"end": 7128,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6709,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6913,
											"end": 6915,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6902,
											"end": 6911,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6898,
											"end": 6916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6890,
											"end": 6916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6890,
											"end": 6916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6962,
											"end": 6971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6956,
											"end": 6960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6952,
											"end": 6972,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6948,
											"end": 6949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6937,
											"end": 6946,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6926,
											"end": 6973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6990,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 7116,
											"end": 7120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6990,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6990,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6990,
											"end": 7121,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 6990,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6982,
											"end": 7121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6982,
											"end": 7121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6709,
											"end": 7128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6709,
											"end": 7128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6709,
											"end": 7128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6709,
											"end": 7128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7134,
											"end": 7367,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 7134,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7196,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 7214,
											"end": 7219,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7196,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7196,
											"end": 7220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7196,
											"end": 7220,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 7196,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7187,
											"end": 7220,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7187,
											"end": 7220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7308,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7235,
											"end": 7240,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7232,
											"end": 7309,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7229,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7229,
											"end": 7332,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7312,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 7312,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7229,
											"end": 7332,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7229,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7359,
											"end": 7360,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7352,
											"end": 7357,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7361,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7341,
											"end": 7361,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7134,
											"end": 7367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7134,
											"end": 7367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7134,
											"end": 7367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7134,
											"end": 7367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7373,
											"end": 7553,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7373,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7421,
											"end": 7498,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7418,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7499,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7518,
											"end": 7522,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 7515,
											"end": 7516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7546,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7539,
											"end": 7540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7744,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 7559,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7634,
											"end": 7635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7616,
											"end": 7636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7650,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 7668,
											"end": 7669,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7650,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7650,
											"end": 7670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7650,
											"end": 7670,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 7650,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7645,
											"end": 7670,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7645,
											"end": 7670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7689,
											"end": 7690,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7694,
											"end": 7712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7736,
											"end": 7737,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7733,
											"end": 7734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7729,
											"end": 7738,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7738,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7744,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7744,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7835,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 7750,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7802,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7824,
											"end": 7829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7813,
											"end": 7829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7813,
											"end": 7829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7841,
											"end": 7901,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7841,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 7872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7883,
											"end": 7895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7883,
											"end": 7895,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7841,
											"end": 7901,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7841,
											"end": 7901,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7841,
											"end": 7901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7841,
											"end": 7901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 8065,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7907,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7998,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 8016,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 8025,
											"end": 8057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 8051,
											"end": 8056,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8025,
											"end": 8057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 8025,
											"end": 8057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8025,
											"end": 8057,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 8025,
											"end": 8057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 8016,
											"end": 8058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8058,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 8016,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7998,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7998,
											"end": 8059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7998,
											"end": 8059,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 7998,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7985,
											"end": 8059,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7985,
											"end": 8059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 8065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 8065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 8065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 8065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8218,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8071,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 8205,
											"end": 8210,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8166,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8211,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 8166,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8154,
											"end": 8212,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8071,
											"end": 8218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8224,
											"end": 8462,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 8224,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8329,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8363,
											"end": 8365,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8352,
											"end": 8361,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8348,
											"end": 8366,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8340,
											"end": 8366,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8340,
											"end": 8366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8376,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 8452,
											"end": 8453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8441,
											"end": 8450,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8437,
											"end": 8454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8428,
											"end": 8434,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8376,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8376,
											"end": 8455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8376,
											"end": 8455,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 8376,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8224,
											"end": 8462,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8224,
											"end": 8462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8224,
											"end": 8462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8224,
											"end": 8462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8224,
											"end": 8462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8615,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8468,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8569,
											"end": 8580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8615,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8615,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8735,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8621,
											"end": 8735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 9139,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8741,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8900,
											"end": 8903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8921,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 9002,
											"end": 9003,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8997,
											"end": 9000,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8921,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 9004,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 8921,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8914,
											"end": 9004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8914,
											"end": 9004,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9013,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9102,
											"end": 9105,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9013,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 9013,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9013,
											"end": 9106,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9013,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9131,
											"end": 9132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9126,
											"end": 9129,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9122,
											"end": 9133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9115,
											"end": 9133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9115,
											"end": 9133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 9139,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 9139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 9139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8741,
											"end": 9139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9145,
											"end": 9524,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 9145,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9332,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 9494,
											"end": 9497,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9351,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 9351,
											"end": 9498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9351,
											"end": 9498,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 9351,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9344,
											"end": 9498,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9344,
											"end": 9498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9515,
											"end": 9518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9145,
											"end": 9524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9145,
											"end": 9524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9145,
											"end": 9524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9145,
											"end": 9524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9706,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 9530,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9670,
											"end": 9698,
											"name": "PUSH",
											"source": 4,
											"value": "5472616E7366657220746F2077616C6C6574206661696C65642E000000000000"
										},
										{
											"begin": 9666,
											"end": 9667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9664,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9668,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9647,
											"end": 9699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9712,
											"end": 10078,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 9712,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9854,
											"end": 9857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9875,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 9939,
											"end": 9941,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 9934,
											"end": 9937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9875,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 9875,
											"end": 9942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9875,
											"end": 9942,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 9875,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9868,
											"end": 9942,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9868,
											"end": 9942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9951,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10040,
											"end": 10043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9951,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 9951,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9951,
											"end": 10044,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 9951,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10071,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10053,
											"end": 10072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10053,
											"end": 10072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9712,
											"end": 10078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9712,
											"end": 10078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9712,
											"end": 10078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9712,
											"end": 10078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10084,
											"end": 10503,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 10084,
											"end": 10503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10250,
											"end": 10254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10277,
											"end": 10286,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10273,
											"end": 10291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10265,
											"end": 10291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10265,
											"end": 10291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10331,
											"end": 10335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10323,
											"end": 10324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 10321,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10308,
											"end": 10325,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10301,
											"end": 10348,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10365,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 10491,
											"end": 10495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10365,
											"end": 10496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 10365,
											"end": 10496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10365,
											"end": 10496,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 10365,
											"end": 10496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10357,
											"end": 10496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10357,
											"end": 10496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10084,
											"end": 10503,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10084,
											"end": 10503,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10084,
											"end": 10503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10084,
											"end": 10503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10509,
											"end": 10690,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 10509,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10645,
											"end": 10646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10637,
											"end": 10643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10626,
											"end": 10683,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10509,
											"end": 10690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10509,
											"end": 10690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 11062,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 10696,
											"end": 11062,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10838,
											"end": 10841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10859,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 10923,
											"end": 10925,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10918,
											"end": 10921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10859,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 10859,
											"end": 10926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10859,
											"end": 10926,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 10859,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10852,
											"end": 10926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10852,
											"end": 10926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10935,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 11024,
											"end": 11027,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10935,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 10935,
											"end": 11028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10935,
											"end": 11028,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 10935,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11053,
											"end": 11055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11048,
											"end": 11051,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11044,
											"end": 11056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11037,
											"end": 11056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11037,
											"end": 11056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 11062,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 11062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 11062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 11062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11487,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 11068,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11234,
											"end": 11238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11272,
											"end": 11274,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11261,
											"end": 11270,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11257,
											"end": 11275,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11249,
											"end": 11275,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11249,
											"end": 11275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11321,
											"end": 11330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11315,
											"end": 11319,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11311,
											"end": 11331,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11307,
											"end": 11308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11296,
											"end": 11305,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11292,
											"end": 11309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11285,
											"end": 11332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11349,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 11475,
											"end": 11479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11349,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 11349,
											"end": 11480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11349,
											"end": 11480,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 11349,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11341,
											"end": 11480,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11341,
											"end": 11480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"HippoSteroids.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buySteroid()": "d4714aad",
							"decreaseSteroidBalance()": "0e0c7494",
							"devWallet()": "8ea5220f",
							"getContractBalance()": "6f9fb98a",
							"getSteroidBalance(address)": "eff0e29d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setDevWallet(address)": "1f53ac02",
							"setStakingPoolWallet(address)": "91274f68",
							"setSteroidCost(uint256)": "0902c67a",
							"stakingPoolWallet()": "26190b47",
							"steroidBalance(address)": "7e9baec2",
							"steroidCost()": "933a4601",
							"transferOwnership(address)": "f2fde38b",
							"withdrawFunds(uint256)": "155dd5ee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingPoolWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCost\",\"type\":\"uint256\"}],\"name\":\"SteroidCostUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SteroidPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buySteroid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decreaseSteroidBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getSteroidBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDevWallet\",\"type\":\"address\"}],\"name\":\"setDevWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStakingPoolWallet\",\"type\":\"address\"}],\"name\":\"setStakingPoolWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCost\",\"type\":\"uint256\"}],\"name\":\"setSteroidCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"steroidBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"steroidCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"buySteroid()\":{\"details\":\"The buyer's steroid balance is incremented and the purchase amount is split between the dev and staking wallets.\"},\"getContractBalance()\":{\"returns\":{\"_0\":\"The balance of the contract.\"}},\"getSteroidBalance(address)\":{\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"_0\":\"The steroid balance of the specified user.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDevWallet(address)\":{\"params\":{\"newDevWallet\":\"The new address for the dev wallet.\"}},\"setStakingPoolWallet(address)\":{\"params\":{\"newStakingPoolWallet\":\"The new address for the staking pool wallet.\"}},\"setSteroidCost(uint256)\":{\"params\":{\"newCost\":\"The new steroid cost in SUN (1 TRX = 1,000,000 SUN).\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFunds(uint256)\":{\"params\":{\"amount\":\"The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buySteroid()\":{\"notice\":\"Purchases a steroid boost for the Hippo NFT.\"},\"getContractBalance()\":{\"notice\":\"Gets the contract's current balance in wei.\"},\"getSteroidBalance(address)\":{\"notice\":\"Gets the steroid balance of a user.\"},\"setDevWallet(address)\":{\"notice\":\"Allows the owner to update the dev wallet address.\"},\"setStakingPoolWallet(address)\":{\"notice\":\"Allows the owner to update the staking pool wallet address.\"},\"setSteroidCost(uint256)\":{\"notice\":\"Allows the owner to update the cost of a steroid.\"},\"withdrawFunds(uint256)\":{\"notice\":\"Allows the owner to withdraw any excess funds from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HippoSteroids.sol\":\"HippoSteroids\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"HippoSteroids.sol\":{\"keccak256\":\"0xa4d8a04f6f7b773855d888a86b61f3f513c27240a163a98cdcd4ac5160f3a68c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76dda4cfe88d43889e2a1685da3f16c9bdb7072b5a105b8e112c6b475e322ce3\",\"dweb:/ipfs/Qmbo7f482mkfsCxiuDKbKyvWvwiU16freGzpokvCXEUBdi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "HippoSteroids.sol:HippoSteroids",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "HippoSteroids.sol:HippoSteroids",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 274,
								"contract": "HippoSteroids.sol:HippoSteroids",
								"label": "steroidCost",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 278,
								"contract": "HippoSteroids.sol:HippoSteroids",
								"label": "steroidBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 280,
								"contract": "HippoSteroids.sol:HippoSteroids",
								"label": "devWallet",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 282,
								"contract": "HippoSteroids.sol:HippoSteroids",
								"label": "stakingPoolWallet",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"buySteroid()": {
								"notice": "Purchases a steroid boost for the Hippo NFT."
							},
							"getContractBalance()": {
								"notice": "Gets the contract's current balance in wei."
							},
							"getSteroidBalance(address)": {
								"notice": "Gets the steroid balance of a user."
							},
							"setDevWallet(address)": {
								"notice": "Allows the owner to update the dev wallet address."
							},
							"setStakingPoolWallet(address)": {
								"notice": "Allows the owner to update the staking pool wallet address."
							},
							"setSteroidCost(uint256)": {
								"notice": "Allows the owner to update the cost of a steroid."
							},
							"withdrawFunds(uint256)": {
								"notice": "Allows the owner to withdraw any excess funds from the contract."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 243,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								242
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 220,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 219,
												"id": 222,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 242,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 229,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 228,
												"id": 231,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 242,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 237,
												"id": 239,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 242,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"HippoSteroids.sol": {
				"ast": {
					"absolutePath": "HippoSteroids.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"HippoSteroids": [
							505
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						]
					},
					"id": 506,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 506,
							"sourceUnit": 148,
							"src": "58:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 506,
							"sourceUnit": 213,
							"src": "111:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 247,
										"name": "Ownable",
										"nameLocations": [
											"201:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "201:7:3"
									},
									"id": 248,
									"nodeType": "InheritanceSpecifier",
									"src": "201:7:3"
								},
								{
									"baseName": {
										"id": 249,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"210:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "210:15:3"
									},
									"id": 250,
									"nodeType": "InheritanceSpecifier",
									"src": "210:15:3"
								}
							],
							"canonicalName": "HippoSteroids",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 505,
							"linearizedBaseContracts": [
								505,
								212,
								147,
								242
							],
							"name": "HippoSteroids",
							"nameLocation": "184:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "337:87:3",
										"statements": [
											{
												"expression": {
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 262,
														"name": "devWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "347:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 263,
														"name": "_devWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "359:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "347:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "347:22:3"
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 266,
														"name": "stakingPoolWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "379:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 267,
														"name": "_stakingPoolWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "399:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "379:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "379:38:3"
											}
										]
									},
									"id": 271,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 257,
													"name": "_devWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 252,
													"src": "307:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 258,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 256,
												"name": "Ownable",
												"nameLocations": [
													"299:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "299:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "299:19:3"
										},
										{
											"arguments": [],
											"id": 260,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 259,
												"name": "ReentrancyGuard",
												"nameLocations": [
													"319:15:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 212,
												"src": "319:15:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "319:17:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "_devWallet",
												"nameLocation": "259:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "251:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "_stakingPoolWallet",
												"nameLocation": "279:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "271:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:48:3"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:0:3"
									},
									"scope": 505,
									"src": "239:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "933a4601",
									"id": 274,
									"mutability": "mutable",
									"name": "steroidCost",
									"nameLocation": "445:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 505,
									"src": "430:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 272,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "430:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363939343230303030",
										"id": 273,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "459:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_699420000_by_1",
											"typeString": "int_const 699420000"
										},
										"value": "699420000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e9baec2",
									"id": 278,
									"mutability": "mutable",
									"name": "steroidBalance",
									"nameLocation": "545:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 505,
									"src": "510:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 277,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 275,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "518:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "510:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 276,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "529:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ea5220f",
									"id": 280,
									"mutability": "mutable",
									"name": "devWallet",
									"nameLocation": "581:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 505,
									"src": "566:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 279,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "26190b47",
									"id": 282,
									"mutability": "mutable",
									"name": "stakingPoolWallet",
									"nameLocation": "611:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 505,
									"src": "596:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 281,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "596:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b66854451839ebc00f6f3f0510f064e36dbcbe3da250cdc9b04fd218078b450d",
									"id": 288,
									"name": "SteroidPurchased",
									"nameLocation": "641:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "674:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "658:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "689:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "681:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:39:3"
									},
									"src": "635:62:3"
								},
								{
									"anonymous": false,
									"eventSelector": "babbcf75b40721548c2b6c6845e36d4bd8ea000d56793fe6ce9cd99f7d4c0758",
									"id": 292,
									"name": "SteroidCostUpdated",
									"nameLocation": "708:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCost",
												"nameLocation": "735:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "727:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:17:3"
									},
									"src": "702:42:3"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "991:434:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 299,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1009:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1013:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1009:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 301,
																"name": "steroidCost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "1022:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1009:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320666f7220537465726f6964204e4654",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1035:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b",
																"typeString": "literal_string \"Insufficient funds for Steroid NFT\""
															},
															"value": "Insufficient funds for Steroid NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_035fc44823f3de0c2b839f68ee300b1e5af743cd610e09be030b6403aa5b615b",
																"typeString": "literal_string \"Insufficient funds for Steroid NFT\""
															}
														],
														"id": 298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1001:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1001:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1001:71:3"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1083:28:3",
													"subExpression": {
														"baseExpression": {
															"id": 306,
															"name": "steroidBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "1083:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 309,
														"indexExpression": {
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1098:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1102:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1098:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1083:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1083:28:3"
											},
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "devShare",
														"nameLocation": "1207:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 342,
														"src": "1199:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1199:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 314,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1218:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1222:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1218:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1230:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1218:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1199:32:3"
											},
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "stakingShare",
														"nameLocation": "1249:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 342,
														"src": "1241:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1241:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 321,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1264:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1268:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1264:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 323,
														"name": "devShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1276:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1264:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1241:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 327,
															"name": "devWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "1302:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "devShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "1313:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "_payTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1295:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1295:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1295:27:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 332,
															"name": "stakingPoolWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1339:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 333,
															"name": "stakingShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "1358:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 331,
														"name": "_payTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1332:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1332:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "1332:39:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 337,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1404:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1408:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1404:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1416:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 336,
														"name": "SteroidPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "1387:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1387:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "EmitStatement",
												"src": "1382:36:3"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "752:182:3",
										"text": "@notice Purchases a steroid boost for the Hippo NFT.\n @dev The buyer's steroid balance is incremented and the purchase amount is split between the dev and staking wallets."
									},
									"functionSelector": "d4714aad",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 295,
												"name": "nonReentrant",
												"nameLocations": [
													"978:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "978:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "978:12:3"
										}
									],
									"name": "buySteroid",
									"nameLocation": "948:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "991:0:3"
									},
									"scope": 505,
									"src": "939:486:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "1649:118:3",
										"statements": [
											{
												"assignments": [
													352,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1665:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "1660:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 351,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1660:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1701:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 353,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "1678:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1681:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1678:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 355,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1693:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1678:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1678:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1659:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "1722:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220746f2077616c6c6574206661696c65642e",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1731:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13",
																"typeString": "literal_string \"Transfer to wallet failed.\""
															},
															"value": "Transfer to wallet failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0fc24e0da760fa7a3697a8aa1c280b488c855ac1090dfcd74962a18941b9eb13",
																"typeString": "literal_string \"Transfer to wallet failed.\""
															}
														],
														"id": 360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1714:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1714:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "1714:46:3"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "1431:160:3",
										"text": "@dev Utility function to transfer funds to a specified address.\n @param to The recipient address.\n @param amount The amount to be transferred."
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payTo",
									"nameLocation": "1605:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1620:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1612:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1632:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1624:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:28:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:0:3"
									},
									"scope": 505,
									"src": "1596:171:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "2002:44:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 374,
														"name": "steroidBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "2019:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 376,
													"indexExpression": {
														"id": 375,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "2034:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2019:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 377,
												"nodeType": "Return",
												"src": "2012:27:3"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1773:151:3",
										"text": "@notice Gets the steroid balance of a user.\n @param user The address of the user.\n @return The steroid balance of the specified user."
									},
									"functionSelector": "eff0e29d",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSteroidBalance",
									"nameLocation": "1938:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1964:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "1956:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:14:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "1993:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:9:3"
									},
									"scope": 505,
									"src": "1929:117:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2254:152:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "newCost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "2272:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2282:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2272:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537465726f696420636f7374206d7573742062652067726561746572207468616e207a65726f",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f",
																"typeString": "literal_string \"Steroid cost must be greater than zero\""
															},
															"value": "Steroid cost must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_041d75e7acc94b4d79414f5b0528617c95bdd55ec939aaee5a0240df750ff06f",
																"typeString": "literal_string \"Steroid cost must be greater than zero\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2264:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "2264:62:3"
											},
											{
												"expression": {
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 394,
														"name": "steroidCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "2336:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 395,
														"name": "newCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "2350:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2336:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "2336:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 399,
															"name": "newCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "2391:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 398,
														"name": "SteroidCostUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2372:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2372:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "EmitStatement",
												"src": "2367:32:3"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2052:137:3",
										"text": "@notice Allows the owner to update the cost of a steroid.\n @param newCost The new steroid cost in SUN (1 TRX = 1,000,000 SUN)."
									},
									"functionSelector": "0902c67a",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 385,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 384,
												"name": "onlyOwner",
												"nameLocations": [
													"2244:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2244:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2244:9:3"
										}
									],
									"name": "setSteroidCost",
									"nameLocation": "2203:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "newCost",
												"nameLocation": "2226:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2218:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2217:17:3"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2254:0:3"
									},
									"scope": 505,
									"src": "2194:212:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2448:68:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 406,
															"name": "steroidBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "2454:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 409,
														"indexExpression": {
															"expression": {
																"id": 407,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2469:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2473:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2469:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2454:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 410,
																"name": "steroidBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "2483:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 413,
															"indexExpression": {
																"expression": {
																	"id": 411,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2498:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2502:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2498:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2483:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2512:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2483:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2454:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2454:59:3"
											}
										]
									},
									"functionSelector": "0e0c7494",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseSteroidBalance",
									"nameLocation": "2416:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2438:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2448:0:3"
									},
									"scope": 505,
									"src": "2407:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "2706:123:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "2724:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 431,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2742:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_HippoSteroids_$505",
																				"typeString": "contract HippoSteroids"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_HippoSteroids_$505",
																				"typeString": "contract HippoSteroids"
																			}
																		],
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2734:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 429,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2734:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2734:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2748:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2734:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2724:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2757:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															},
															"value": "Insufficient contract balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2716:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2716:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "2716:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 439,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2806:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2806:7:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "2815:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "_payTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2799:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2799:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2799:23:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2521:122:3",
										"text": "@notice Allows the owner to withdraw any excess funds from the contract.\n @param amount The amount to withdraw."
									},
									"functionSelector": "155dd5ee",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 425,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 424,
												"name": "onlyOwner",
												"nameLocations": [
													"2696:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2696:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2696:9:3"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "2657:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2679:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "2671:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2671:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2670:16:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2706:0:3"
									},
									"scope": 505,
									"src": "2648:181:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "3002:45:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 453,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3027:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_HippoSteroids_$505",
																	"typeString": "contract HippoSteroids"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_HippoSteroids_$505",
																	"typeString": "contract HippoSteroids"
																}
															],
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3019:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 451,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3019:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3019:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3033:7:3",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3019:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 456,
												"nodeType": "Return",
												"src": "3012:28:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2835:100:3",
										"text": "@notice Gets the contract's current balance in wei.\n @return The balance of the contract."
									},
									"functionSelector": "6f9fb98a",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nameLocation": "2949:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2967:2:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2993:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2993:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2992:9:3"
									},
									"scope": 505,
									"src": "2940:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "3247:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "newDevWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "3265:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3289:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3281:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 468,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3281:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3281:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3265:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3293:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3257:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3257:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "3257:54:3"
											},
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "devWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "3321:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 477,
														"name": "newDevWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3333:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3321:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "3321:24:3"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "3053:126:3",
										"text": "@notice Allows the owner to update the dev wallet address.\n @param newDevWallet The new address for the dev wallet."
									},
									"functionSelector": "1f53ac02",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyOwner",
												"nameLocations": [
													"3237:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3237:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3237:9:3"
										}
									],
									"name": "setDevWallet",
									"nameLocation": "3193:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "newDevWallet",
												"nameLocation": "3214:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "3206:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3205:22:3"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3247:0:3"
									},
									"scope": 505,
									"src": "3184:168:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "3594:129:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 490,
																"name": "newStakingPoolWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3612:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3644:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3636:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 491,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3636:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3636:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3612:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3648:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3604:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3604:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "3604:62:3"
											},
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 499,
														"name": "stakingPoolWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "3676:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 500,
														"name": "newStakingPoolWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3696:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3676:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "3676:40:3"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "3358:152:3",
										"text": "@notice Allows the owner to update the staking pool wallet address.\n @param newStakingPoolWallet The new address for the staking pool wallet."
									},
									"functionSelector": "91274f68",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 486,
												"name": "onlyOwner",
												"nameLocations": [
													"3584:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3584:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3584:9:3"
										}
									],
									"name": "setStakingPoolWallet",
									"nameLocation": "3524:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "newStakingPoolWallet",
												"nameLocation": "3553:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "3545:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3544:30:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3594:0:3"
									},
									"scope": 505,
									"src": "3515:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 506,
							"src": "175:3550:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								288,
								292
							]
						}
					],
					"src": "32:3694:3"
				},
				"id": 3
			}
		}
	}
}